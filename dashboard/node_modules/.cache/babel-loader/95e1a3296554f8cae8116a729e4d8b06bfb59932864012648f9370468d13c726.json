{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malus\\\\secure-esports-tracker - real - Copy\\\\dashboard\\\\src\\\\pages\\\\IoTDevices.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MouseButtonHeatmap from '../components/MouseButtonHeatmap';\nimport { fetchWithAuth } from '../utils/api';\nimport '../App.css';\n\n// Separated Heatmap component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeviceHeatmap = ({\n  deviceId\n}) => {\n  _s();\n  const [heatmapData, setHeatmapData] = useState(null);\n  const [heatmapType, setHeatmapType] = useState('position');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch heatmap data from the server\n    const fetchHeatmapData = async () => {\n      if (!deviceId) return;\n      try {\n        const token = localStorage.getItem('authToken');\n        const response = await fetch(`http://localhost:5000/api/metrics/iot_heatmap/${deviceId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch heatmap data');\n        }\n        const data = await response.json();\n        setHeatmapData(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching heatmap data:', err);\n        // Generate some dummy heatmap data if the API fails\n        generateDummyHeatmap();\n      }\n    };\n    const generateDummyHeatmap = () => {\n      // Create a 108×192 grid (scaled down 1920×1080 by factor of 10)\n      const width = 192;\n      const height = 108;\n      const positionData = Array(height).fill().map(() => Array(width).fill(0));\n      const clickData = Array(height).fill().map(() => Array(width).fill(0));\n\n      // Generate some random hotspots\n      // Center area (where most movement happens)\n      for (let i = 0; i < 5000; i++) {\n        const x = Math.floor(Math.random() * width * 0.6 + width * 0.2);\n        const y = Math.floor(Math.random() * height * 0.6 + height * 0.2);\n        positionData[y][x] += Math.random() * 2 + 1;\n\n        // Clicks are less frequent\n        if (Math.random() < 0.3) {\n          clickData[y][x] += Math.random() * 5 + 1;\n        }\n      }\n\n      // Add hotspots for common UI elements (top-left, bottom, etc.)\n      // Top-left (menu area)\n      for (let i = 0; i < 1000; i++) {\n        const x = Math.floor(Math.random() * width * 0.2);\n        const y = Math.floor(Math.random() * height * 0.2);\n        positionData[y][x] += Math.random() * 3 + 1;\n        if (Math.random() < 0.4) {\n          clickData[y][x] += Math.random() * 8 + 2;\n        }\n      }\n\n      // Bottom center (action bar area)\n      for (let i = 0; i < 1000; i++) {\n        const x = Math.floor(Math.random() * width * 0.6 + width * 0.2);\n        const y = Math.floor(Math.random() * height * 0.2 + height * 0.8);\n        positionData[y][x] += Math.random() * 2 + 1;\n        if (Math.random() < 0.5) {\n          clickData[y][x] += Math.random() * 6 + 3;\n        }\n      }\n      setHeatmapData({\n        position_heatmap: positionData,\n        click_heatmap: clickData,\n        resolution: {\n          width,\n          height\n        }\n      });\n      setLoading(false);\n    };\n    fetchHeatmapData();\n\n    // Set up a controlled interval for refreshing data\n    const intervalId = setInterval(fetchHeatmapData, 30000); // Refresh every 30 seconds\n\n    // Clean up interval on unmount\n    return () => clearInterval(intervalId);\n  }, [deviceId]);\n  if (loading || !heatmapData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Mouse Movement Heatmap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading heatmap data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Get the current heatmap based on user selection\n  const currentHeatmap = heatmapType === 'position' ? heatmapData.position_heatmap : heatmapData.click_heatmap;\n\n  // Color mapping function\n  const getColor = value => {\n    // Color scale from blue (cold) to red (hot)\n    if (value === 0) return 'rgba(0, 0, 0, 0)'; // Transparent for no data\n    if (value < 10) return `rgba(0, 0, 255, ${value / 20})`;\n    if (value < 30) return `rgba(0, ${255 - (value - 10) * 8}, 255, 0.5)`;\n    if (value < 60) return `rgba(${(value - 30) * 8}, 255, ${255 - (value - 30) * 8}, 0.6)`;\n    if (value < 80) return `rgba(255, ${255 - (value - 60) * 12}, 0, 0.7)`;\n    return `rgba(255, 0, 0, 0.8)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-title\",\n      children: \"Screen Interaction Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${heatmapType === 'position' ? 'btn-primary' : ''}`,\n        onClick: () => setHeatmapType('position'),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Movement Heatmap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${heatmapType === 'click' ? 'btn-primary' : ''}`,\n        onClick: () => setHeatmapType('click'),\n        children: \"Click Heatmap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '300px',\n        border: '1px solid var(--border-color)',\n        borderRadius: '4px',\n        overflow: 'hidden',\n        backgroundColor: '#111'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        },\n        children: currentHeatmap && heatmapData.resolution && /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${heatmapData.resolution.width} ${heatmapData.resolution.height}`,\n          children: currentHeatmap.map((row, y) => row.map((value, x) => value > 0 && /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: x,\n            y: y,\n            width: 1,\n            height: 1,\n            fill: getColor(value)\n          }, `${x}-${y}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '10%',\n          left: '10%',\n          width: '80%',\n          height: '80%',\n          border: '1px dashed rgba(255, 255, 255, 0.3)',\n          borderRadius: '2px',\n          pointerEvents: 'none',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'rgba(255, 255, 255, 0.2)'\n          },\n          children: \"Game Screen Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Heatmap Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 12\n        }, this), \" \", heatmapType === 'position' ? 'Mouse Movement' : 'Mouse Clicks']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This heatmap shows the distribution of \", heatmapType === 'position' ? 'mouse movements' : 'mouse clicks', \" across the screen, processed by the edge computing capabilities of the IoT mouse sensor.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The real-time data collection and processing demonstrates how IoT gaming peripherals can provide deeper insights into player behavior and performance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceHeatmap, \"w4wTnGMVulNHhdgY+OmJmJA3/dM=\");\n_c = DeviceHeatmap;\nconst IoTDevices = ({\n  user\n}) => {\n  _s2();\n  var _devices$find;\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [deviceData, setDeviceData] = useState([]);\n  const [securityAlerts, setSecurityAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshInterval, setRefreshInterval] = useState(5); // in seconds\n  const [isRefreshing, setIsRefreshing] = useState(true);\n  useEffect(() => {\n    // Load devices from API\n    const fetchDevices = async () => {\n      try {\n        const response = await fetchWithAuth('/api/devices');\n        if (!response.ok) {\n          throw new Error('Failed to fetch devices');\n        }\n        const data = await response.json();\n        console.log(\"Received devices data:\", data);\n\n        // Filter IoT devices with updated device types\n        const iotDevices = data.devices.filter(device => device.device_type === 'mouse' || device.device_type === 'keyboard' || device.device_type === 'headset' || device.device_type === 'mouse_sensor' || device.device_type === 'keyboard_sensor' || device.device_type === 'headset_sensor');\n\n        // Rename devices to be more IoT-specific\n        const renamedDevices = iotDevices.map(device => {\n          // Update names to better indicate IoT sensor nature\n          if (device.device_type === 'mouse' || device.name.includes('Mouse')) {\n            return {\n              ...device,\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\n              device_type: device.device_type === 'mouse' ? 'mouse_sensor' : device.device_type\n            };\n          }\n          if (device.device_type === 'keyboard' || device.name.includes('Keyboard')) {\n            return {\n              ...device,\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\n              device_type: device.device_type === 'keyboard' ? 'keyboard_sensor' : device.device_type\n            };\n          }\n          if (device.device_type === 'headset' || device.name.includes('Headset')) {\n            return {\n              ...device,\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\n              device_type: device.device_type === 'headset' ? 'headset_sensor' : device.device_type\n            };\n          }\n          return device;\n        });\n        setDevices(renamedDevices);\n\n        // Select first device by default\n        if (renamedDevices.length > 0 && !selectedDevice) {\n          setSelectedDevice(renamedDevices[0].client_id);\n        }\n      } catch (err) {\n        console.error('Error fetching devices:', err);\n        setError('Failed to load devices. Please try again.');\n\n        // Set fallback devices for demo purposes with IoT sensor names\n        const fallbackDevices = [{\n          client_id: 'mouse-001',\n          name: 'Gaming Mouse Sensor',\n          device_type: 'mouse_sensor',\n          status: 'active'\n        }, {\n          client_id: 'keyboard-001',\n          name: 'Gaming Keyboard Sensor',\n          device_type: 'keyboard_sensor',\n          status: 'active'\n        }];\n        setDevices(fallbackDevices);\n        if (!selectedDevice) {\n          setSelectedDevice(fallbackDevices[0].client_id);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDevices();\n\n    // Poll for devices every 30 seconds\n    const deviceInterval = setInterval(fetchDevices, 30000);\n    return () => clearInterval(deviceInterval);\n  }, [selectedDevice]);\n  useEffect(() => {\n    // Set up the data refresh interval\n    let dataInterval;\n    if (isRefreshing && selectedDevice) {\n      const fetchData = async () => {\n        try {\n          await Promise.all([fetchDeviceData(selectedDevice), fetchSecurityAlerts(selectedDevice)]);\n        } catch (err) {\n          console.error('Error refreshing data:', err);\n        }\n      };\n\n      // Fetch immediately\n      fetchData();\n\n      // Then set interval\n      dataInterval = setInterval(fetchData, refreshInterval * 1000);\n    }\n    return () => {\n      if (dataInterval) clearInterval(dataInterval);\n    };\n  }, [selectedDevice, refreshInterval, isRefreshing]);\n  const fetchDeviceData = async deviceId => {\n    try {\n      console.log(\"Fetching data for device:\", deviceId);\n      const response = await fetch(`http://localhost:5000/api/metrics/iot_data/${deviceId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch device data');\n      }\n      const result = await response.json();\n      console.log(\"Received device data:\", result);\n      setDeviceData(result.data || []);\n    } catch (err) {\n      console.error('Error fetching device data:', err);\n      // Use fallback data on error with IoT-specific metrics\n      setDeviceData([{\n        device_id: deviceId,\n        session_id: 'fallback-session',\n        timestamp: new Date().toISOString(),\n        metrics: {\n          clicks_per_second: 4,\n          movements_count: 120,\n          dpi: 16000,\n          polling_rate: 1000,\n          avg_click_distance: 42.5,\n          button_count: 8\n        },\n        status: {\n          under_attack: false,\n          attack_duration: 0,\n          battery_level: 85,\n          connection_quality: 95\n        }\n      }]);\n    }\n  };\n  const fetchSecurityAlerts = async deviceId => {\n    try {\n      console.log(\"Fetching security alerts for device:\", deviceId);\n      const response = await fetch(`http://localhost:5000/api/security/device_alerts/${deviceId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch security alerts');\n      }\n      const result = await response.json();\n      console.log(\"Received security alerts:\", result);\n      setSecurityAlerts(result.alerts || []);\n    } catch (err) {\n      console.error('Error fetching security alerts:', err);\n      // Use fallback data on error\n      setSecurityAlerts([{\n        timestamp: new Date().toISOString(),\n        event_type: 'attack_detected',\n        details: {\n          attack_type: 'ping_flood',\n          intensity: 72,\n          threshold: 50\n        },\n        severity: 'critical'\n      }]);\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    } catch (e) {\n      return dateString;\n    }\n  };\n  const getMostRecentData = () => {\n    if (!deviceData || deviceData.length === 0) return null;\n    return deviceData[deviceData.length - 1];\n  };\n  const getLatestMetrics = () => {\n    const recent = getMostRecentData();\n    if (!recent || !recent.metrics) return null;\n    return recent.metrics;\n  };\n  const getDeviceStatus = () => {\n    const recent = getMostRecentData();\n    if (!recent || !recent.status) return {\n      under_attack: false\n    };\n    return recent.status;\n  };\n\n  // Fixed function to properly reflect attack status\n  const renderDeviceStatus = () => {\n    const status = getDeviceStatus();\n    // Check for critical alerts in the last minute to determine attack status\n    const hasRecentCriticalAlert = securityAlerts.some(alert => {\n      const alertTime = new Date(alert.timestamp);\n      const now = new Date();\n      const timeDiff = (now - alertTime) / 1000; // in seconds\n      return alert.severity === 'critical' && timeDiff < 60;\n    });\n\n    // Consider the device under attack if either status says so OR there's a recent critical alert\n    const isAttacked = status && status.under_attack || hasRecentCriticalAlert;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '15px',\n        borderRadius: '8px',\n        backgroundColor: isAttacked ? 'rgba(176, 0, 32, 0.1)' : 'rgba(0, 200, 83, 0.1)',\n        border: `1px solid ${isAttacked ? 'var(--error-color)' : 'var(--success-color)'}`,\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: \"Device Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0',\n              fontWeight: 'bold',\n              color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\n            },\n            children: isAttacked ? 'UNDER ATTACK' : 'SECURE'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '2rem',\n            color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\n          },\n          children: isAttacked ? '⚠️' : '✓'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), isAttacked && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0',\n            fontSize: '0.9rem'\n          },\n          children: [\"Attack duration: \", status.attack_duration || 0, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            fontSize: '0.9rem'\n          },\n          children: \"Security alert: DDoS protection engaged, traffic filtering active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            fontSize: '0.9rem'\n          },\n          children: \"Take immediate action to mitigate this attack!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Enhanced to display IoT-specific metrics with better descriptions\n  const renderDeviceMetrics = () => {\n    const metrics = getLatestMetrics();\n    if (!metrics) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No metrics available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 26\n    }, this);\n\n    // Get device type for context-specific descriptions\n    const selectedDeviceObj = devices.find(d => d.client_id === selectedDevice);\n    const deviceType = selectedDeviceObj ? selectedDeviceObj.device_type : 'mouse_sensor';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Real-Time IoT Performance Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Device Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 14\n          }, this), \" \", deviceType, \" - A specialized IoT sensor system equipped with accelerometers, gyroscopes, and pressure sensors to capture precise gaming input data and transmit it securely across the network.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IoT Capabilities:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 14\n          }, this), \" Edge processing, wireless connectivity, real-time data transmission, anomaly detection, encrypted communication\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Network Protocol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 14\n          }, this), \" MQTT over TLS 1.3 with certificate-based authentication\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: Object.entries(metrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            minWidth: '150px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: formatMetricName(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '2rem',\n              fontWeight: 'bold',\n              margin: '5px 0'\n            },\n            children: formatMetricValue(key, value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.8rem',\n              margin: '0',\n              color: '#666'\n            },\n            children: getMetricDescription(key, deviceType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          borderTop: '1px solid var(--border-color)',\n          paddingTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"IoT Network Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Packet Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '4.2%' : '0.01%'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Latency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '12ms' : '2ms'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Signal Strength\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '-65dBm' : '-42dBm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Power Consumption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '120mW' : '85mW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper functions for better metric presentation\n  const formatMetricName = key => {\n    // Convert snake_case to Title Case\n    return key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const formatMetricValue = (key, value) => {\n    // Format values with appropriate units\n    if (key === 'avg_click_distance') return `${value}px`;\n    if (key === 'polling_rate') return `${value}Hz`;\n    if (key === 'dpi') return value.toLocaleString();\n    return value;\n  };\n  const getMetricDescription = (key, deviceType) => {\n    const descriptions = {\n      clicks_per_second: 'Number of input events per second detected by the pressure sensors',\n      movements_count: 'Total movement events tracked by motion sensors',\n      dpi: 'Resolution of the optical/laser position sensor',\n      polling_rate: 'Sensor data sampling frequency',\n      avg_click_distance: 'Average pixel distance between clicks measured by position sensors',\n      button_count: 'Number of discrete input sensors on device'\n    };\n    return descriptions[key] || `IoT sensor data metric for ${deviceType}`;\n  };\n\n  // Enhanced security alerts with better formatting\n  const renderSecurityAlerts = () => {\n    if (!securityAlerts || securityAlerts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Security Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No security alerts detected for this IoT sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Security Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowY: 'auto',\n          maxHeight: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Timestamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Event Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Severity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: securityAlerts.slice().reverse().map((alert, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: formatDate(alert.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: formatEventType(alert.event_type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    padding: '4px 8px',\n                    borderRadius: '4px',\n                    backgroundColor: alert.severity === 'critical' ? 'var(--error-color)' : '#ff9800',\n                    color: 'white',\n                    fontWeight: 'bold',\n                    fontSize: '0.8rem'\n                  },\n                  children: alert.severity.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: formatAlertDetails(alert)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper functions for security alerts\n  const formatEventType = eventType => {\n    // Make event types more descriptive\n    if (eventType === 'attack_detected') return 'Network Attack Detected';\n    if (eventType === 'attack_resolved') return 'Attack Mitigation Successful';\n    return eventType.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n  };\n  const formatAlertDetails = alert => {\n    if (!alert.details) return 'No details available';\n    if (typeof alert.details === 'string') {\n      try {\n        const details = JSON.parse(alert.details);\n        return formatDetailsObject(details);\n      } catch (e) {\n        return alert.details;\n      }\n    }\n    return formatDetailsObject(alert.details);\n  };\n  const formatDetailsObject = details => {\n    if (details.attack_type === 'ping_flood') {\n      return `DDoS attack detected: ${details.intensity} packets/sec (threshold: ${details.threshold}). IoT firewall engaged.`;\n    }\n    if (details.duration) {\n      return `Attack resolved after ${details.duration} seconds. Normal operation restored.`;\n    }\n    return JSON.stringify(details);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading IoT devices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        color: 'var(--error-color)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IoT Sensor Network Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Monitor your IoT gaming equipment sensors, network performance and security in real-time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDevice || '',\n          onChange: e => setSelectedDevice(e.target.value),\n          className: \"form-control\",\n          style: {\n            padding: '8px',\n            minWidth: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an IoT sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: device.client_id,\n            children: [device.name, \" (\", device.device_type, \")\"]\n          }, device.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: [\"Refresh interval:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: refreshInterval,\n            onChange: e => setRefreshInterval(parseInt(e.target.value)),\n            className: \"form-control\",\n            style: {\n              marginLeft: '10px',\n              padding: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1 second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \"30 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setIsRefreshing(!isRefreshing),\n          style: {\n            marginLeft: '10px'\n          },\n          children: [isRefreshing ? 'Pause' : 'Resume', \" Updates\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this), selectedDevice ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderDeviceStatus(), renderDeviceMetrics(), renderSecurityAlerts(), /*#__PURE__*/_jsxDEV(DeviceHeatmap, {\n        deviceId: selectedDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 11\n      }, this), ((_devices$find = devices.find(d => d.client_id === selectedDevice)) === null || _devices$find === void 0 ? void 0 : _devices$find.device_type.includes('mouse')) && /*#__PURE__*/_jsxDEV(MouseButtonHeatmap, {\n        deviceId: selectedDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"No IoT Device Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an IoT device sensor from the dropdown to view its metrics and security status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 11\n      }, this), devices.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No IoT devices found in your account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To add a device, go to the Devices page and register a new device with type 'mouse_sensor', 'keyboard_sensor', or 'headset_sensor'.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"IoT Security Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Keep IoT firmware updated with the latest security patches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Implement network segmentation to isolate IoT devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use strong, unique credentials for each device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Enable TLS for all device communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Regularly audit device access and traffic patterns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Implement intrusion detection at the edge gateway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Ensure proper certificate management and rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '15px',\n          backgroundColor: 'rgba(98, 0, 234, 0.1)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 10px 0'\n          },\n          children: \"DDoS Attack Protection for IoT Gaming Sensors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0'\n          },\n          children: \"This monitoring system implements a multilayered defense against various DDoS attacks targeting your gaming sensors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Edge Filtering:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this), \" Attack traffic is detected and filtered at the sensor level before impacting performance\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Adaptive Rate Limiting:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this), \" Dynamically adjusts traffic thresholds based on historical patterns\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Signature-Based Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 17\n            }, this), \" Identifies known attack patterns and automatically applies countermeasures\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Anomaly Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 17\n            }, this), \" Machine learning algorithms identify deviations from normal traffic\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Secure Bootstrapping:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 17\n            }, this), \" Devices use mutual authentication with the gateway to prevent impersonation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 712,\n    columnNumber: 5\n  }, this);\n};\n_s2(IoTDevices, \"3FJ5ginvTxI2iWpgHjEJNcb+5lc=\");\n_c2 = IoTDevices;\nexport default IoTDevices;\nvar _c, _c2;\n$RefreshReg$(_c, \"DeviceHeatmap\");\n$RefreshReg$(_c2, \"IoTDevices\");","map":{"version":3,"names":["React","useState","useEffect","MouseButtonHeatmap","fetchWithAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","DeviceHeatmap","deviceId","_s","heatmapData","setHeatmapData","heatmapType","setHeatmapType","loading","setLoading","fetchHeatmapData","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","err","console","error","generateDummyHeatmap","width","height","positionData","Array","fill","map","clickData","i","x","Math","floor","random","y","position_heatmap","click_heatmap","resolution","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentHeatmap","getColor","value","style","marginBottom","onClick","marginRight","position","border","borderRadius","overflow","backgroundColor","top","left","viewBox","row","pointerEvents","display","justifyContent","alignItems","color","marginTop","_c","IoTDevices","user","_s2","_devices$find","devices","setDevices","selectedDevice","setSelectedDevice","deviceData","setDeviceData","securityAlerts","setSecurityAlerts","setError","refreshInterval","setRefreshInterval","isRefreshing","setIsRefreshing","fetchDevices","log","iotDevices","filter","device","device_type","renamedDevices","name","includes","length","client_id","fallbackDevices","status","deviceInterval","dataInterval","fetchData","Promise","all","fetchDeviceData","fetchSecurityAlerts","result","device_id","session_id","timestamp","Date","toISOString","metrics","clicks_per_second","movements_count","dpi","polling_rate","avg_click_distance","button_count","under_attack","attack_duration","battery_level","connection_quality","alerts","event_type","details","attack_type","intensity","threshold","severity","formatDate","dateString","date","toLocaleString","e","getMostRecentData","getLatestMetrics","recent","getDeviceStatus","renderDeviceStatus","hasRecentCriticalAlert","some","alert","alertTime","now","timeDiff","isAttacked","padding","margin","fontWeight","fontSize","renderDeviceMetrics","selectedDeviceObj","find","d","deviceType","flexWrap","gap","Object","entries","key","flex","minWidth","formatMetricName","formatMetricValue","getMetricDescription","borderTop","paddingTop","split","word","charAt","toUpperCase","slice","join","descriptions","renderSecurityAlerts","overflowY","maxHeight","borderCollapse","textAlign","borderBottom","reverse","index","formatEventType","formatAlertDetails","eventType","replace","c","JSON","parse","formatDetailsObject","duration","stringify","window","location","reload","onChange","target","parseInt","marginLeft","_c2","$RefreshReg$"],"sources":["C:/Users/malus/secure-esports-tracker - real - Copy/dashboard/src/pages/IoTDevices.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MouseButtonHeatmap from '../components/MouseButtonHeatmap';\r\nimport { fetchWithAuth } from '../utils/api';\r\nimport '../App.css';\r\n\r\n// Separated Heatmap component\r\nconst DeviceHeatmap = ({ deviceId }) => {\r\n  const [heatmapData, setHeatmapData] = useState(null);\r\n  const [heatmapType, setHeatmapType] = useState('position');\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    // Fetch heatmap data from the server\r\n    const fetchHeatmapData = async () => {\r\n      if (!deviceId) return;\r\n      \r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        const response = await fetch(`http://localhost:5000/api/metrics/iot_heatmap/${deviceId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch heatmap data');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setHeatmapData(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching heatmap data:', err);\r\n        // Generate some dummy heatmap data if the API fails\r\n        generateDummyHeatmap();\r\n      }\r\n    };\r\n    \r\n    const generateDummyHeatmap = () => {\r\n      // Create a 108×192 grid (scaled down 1920×1080 by factor of 10)\r\n      const width = 192;\r\n      const height = 108;\r\n      const positionData = Array(height).fill().map(() => Array(width).fill(0));\r\n      const clickData = Array(height).fill().map(() => Array(width).fill(0));\r\n      \r\n      // Generate some random hotspots\r\n      // Center area (where most movement happens)\r\n      for (let i = 0; i < 5000; i++) {\r\n        const x = Math.floor(Math.random() * width * 0.6 + width * 0.2);\r\n        const y = Math.floor(Math.random() * height * 0.6 + height * 0.2);\r\n        positionData[y][x] += Math.random() * 2 + 1;\r\n        \r\n        // Clicks are less frequent\r\n        if (Math.random() < 0.3) {\r\n          clickData[y][x] += Math.random() * 5 + 1;\r\n        }\r\n      }\r\n      \r\n      // Add hotspots for common UI elements (top-left, bottom, etc.)\r\n      // Top-left (menu area)\r\n      for (let i = 0; i < 1000; i++) {\r\n        const x = Math.floor(Math.random() * width * 0.2);\r\n        const y = Math.floor(Math.random() * height * 0.2);\r\n        positionData[y][x] += Math.random() * 3 + 1;\r\n        if (Math.random() < 0.4) {\r\n          clickData[y][x] += Math.random() * 8 + 2;\r\n        }\r\n      }\r\n      \r\n      // Bottom center (action bar area)\r\n      for (let i = 0; i < 1000; i++) {\r\n        const x = Math.floor(Math.random() * width * 0.6 + width * 0.2);\r\n        const y = Math.floor(Math.random() * height * 0.2 + height * 0.8);\r\n        positionData[y][x] += Math.random() * 2 + 1;\r\n        if (Math.random() < 0.5) {\r\n          clickData[y][x] += Math.random() * 6 + 3;\r\n        }\r\n      }\r\n      \r\n      setHeatmapData({\r\n        position_heatmap: positionData,\r\n        click_heatmap: clickData,\r\n        resolution: {\r\n          width,\r\n          height\r\n        }\r\n      });\r\n      setLoading(false);\r\n    };\r\n    \r\n    fetchHeatmapData();\r\n    \r\n    // Set up a controlled interval for refreshing data\r\n    const intervalId = setInterval(fetchHeatmapData, 30000); // Refresh every 30 seconds\r\n    \r\n    // Clean up interval on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, [deviceId]);\r\n  \r\n  if (loading || !heatmapData) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Mouse Movement Heatmap</h2>\r\n        <p>Loading heatmap data...</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Get the current heatmap based on user selection\r\n  const currentHeatmap = heatmapType === 'position' \r\n    ? heatmapData.position_heatmap \r\n    : heatmapData.click_heatmap;\r\n  \r\n  // Color mapping function\r\n  const getColor = (value) => {\r\n    // Color scale from blue (cold) to red (hot)\r\n    if (value === 0) return 'rgba(0, 0, 0, 0)'; // Transparent for no data\r\n    if (value < 10) return `rgba(0, 0, 255, ${value / 20})`;\r\n    if (value < 30) return `rgba(0, ${255 - (value - 10) * 8}, 255, 0.5)`;\r\n    if (value < 60) return `rgba(${(value - 30) * 8}, 255, ${255 - (value - 30) * 8}, 0.6)`;\r\n    if (value < 80) return `rgba(255, ${255 - (value - 60) * 12}, 0, 0.7)`;\r\n    return `rgba(255, 0, 0, 0.8)`;\r\n  };\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <h2 className=\"card-title\">Screen Interaction Heatmap</h2>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <button \r\n          className={`btn ${heatmapType === 'position' ? 'btn-primary' : ''}`}\r\n          onClick={() => setHeatmapType('position')}\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          Movement Heatmap\r\n        </button>\r\n        <button \r\n          className={`btn ${heatmapType === 'click' ? 'btn-primary' : ''}`}\r\n          onClick={() => setHeatmapType('click')}\r\n        >\r\n          Click Heatmap\r\n        </button>\r\n      </div>\r\n      \r\n      <div style={{ \r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '300px',\r\n        border: '1px solid var(--border-color)',\r\n        borderRadius: '4px',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#111'\r\n      }}>\r\n        {/* Visualization canvas */}\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%'\r\n        }}>\r\n          {currentHeatmap && heatmapData.resolution && (\r\n            <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${heatmapData.resolution.width} ${heatmapData.resolution.height}`}>\r\n              {currentHeatmap.map((row, y) => \r\n                row.map((value, x) => \r\n                  value > 0 && (\r\n                    <rect \r\n                      key={`${x}-${y}`} \r\n                      x={x} \r\n                      y={y} \r\n                      width={1} \r\n                      height={1} \r\n                      fill={getColor(value)} \r\n                    />\r\n                  )\r\n                )\r\n              )}\r\n            </svg>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Add a simulated game screen overlay for reference */}\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '10%',\r\n          left: '10%',\r\n          width: '80%',\r\n          height: '80%',\r\n          border: '1px dashed rgba(255, 255, 255, 0.3)',\r\n          borderRadius: '2px',\r\n          pointerEvents: 'none',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <span style={{ color: 'rgba(255, 255, 255, 0.2)' }}>Game Screen Area</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div style={{ marginTop: '15px' }}>\r\n        <p><strong>Heatmap Type:</strong> {heatmapType === 'position' ? 'Mouse Movement' : 'Mouse Clicks'}</p>\r\n        <p>This heatmap shows the distribution of {heatmapType === 'position' ? 'mouse movements' : 'mouse clicks'} across the screen, processed by the edge computing capabilities of the IoT mouse sensor.</p>\r\n        <p>The real-time data collection and processing demonstrates how IoT gaming peripherals can provide deeper insights into player behavior and performance.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst IoTDevices = ({ user }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [deviceData, setDeviceData] = useState([]);\r\n  const [securityAlerts, setSecurityAlerts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [refreshInterval, setRefreshInterval] = useState(5); // in seconds\r\n  const [isRefreshing, setIsRefreshing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Load devices from API\r\n    const fetchDevices = async () => {\r\n      try {\r\n        const response = await fetchWithAuth('/api/devices');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch devices');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Received devices data:\", data);\r\n        \r\n        // Filter IoT devices with updated device types\r\n        const iotDevices = data.devices.filter(device => \r\n          device.device_type === 'mouse' || \r\n          device.device_type === 'keyboard' || \r\n          device.device_type === 'headset' ||\r\n          device.device_type === 'mouse_sensor' || \r\n          device.device_type === 'keyboard_sensor' || \r\n          device.device_type === 'headset_sensor'\r\n        );\r\n        \r\n        // Rename devices to be more IoT-specific\r\n        const renamedDevices = iotDevices.map(device => {\r\n          // Update names to better indicate IoT sensor nature\r\n          if (device.device_type === 'mouse' || device.name.includes('Mouse')) {\r\n            return {\r\n              ...device,\r\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\r\n              device_type: device.device_type === 'mouse' ? 'mouse_sensor' : device.device_type\r\n            };\r\n          }\r\n          if (device.device_type === 'keyboard' || device.name.includes('Keyboard')) {\r\n            return {\r\n              ...device,\r\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\r\n              device_type: device.device_type === 'keyboard' ? 'keyboard_sensor' : device.device_type\r\n            };\r\n          }\r\n          if (device.device_type === 'headset' || device.name.includes('Headset')) {\r\n            return {\r\n              ...device,\r\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\r\n              device_type: device.device_type === 'headset' ? 'headset_sensor' : device.device_type\r\n            };\r\n          }\r\n          return device;\r\n        });\r\n        \r\n        setDevices(renamedDevices);\r\n        \r\n        // Select first device by default\r\n        if (renamedDevices.length > 0 && !selectedDevice) {\r\n          setSelectedDevice(renamedDevices[0].client_id);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching devices:', err);\r\n        setError('Failed to load devices. Please try again.');\r\n        \r\n        // Set fallback devices for demo purposes with IoT sensor names\r\n        const fallbackDevices = [\r\n          {\r\n            client_id: 'mouse-001',\r\n            name: 'Gaming Mouse Sensor',\r\n            device_type: 'mouse_sensor',\r\n            status: 'active',\r\n          },\r\n          {\r\n            client_id: 'keyboard-001',\r\n            name: 'Gaming Keyboard Sensor',\r\n            device_type: 'keyboard_sensor',\r\n            status: 'active',\r\n          }\r\n        ];\r\n        setDevices(fallbackDevices);\r\n        if (!selectedDevice) {\r\n          setSelectedDevice(fallbackDevices[0].client_id);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDevices();\r\n    \r\n    // Poll for devices every 30 seconds\r\n    const deviceInterval = setInterval(fetchDevices, 30000);\r\n    \r\n    return () => clearInterval(deviceInterval);\r\n  }, [selectedDevice]);\r\n\r\n  useEffect(() => {\r\n    // Set up the data refresh interval\r\n    let dataInterval;\r\n    \r\n    if (isRefreshing && selectedDevice) {\r\n      const fetchData = async () => {\r\n        try {\r\n          await Promise.all([\r\n            fetchDeviceData(selectedDevice),\r\n            fetchSecurityAlerts(selectedDevice)\r\n          ]);\r\n        } catch (err) {\r\n          console.error('Error refreshing data:', err);\r\n        }\r\n      };\r\n      \r\n      // Fetch immediately\r\n      fetchData();\r\n      \r\n      // Then set interval\r\n      dataInterval = setInterval(fetchData, refreshInterval * 1000);\r\n    }\r\n    \r\n    return () => {\r\n      if (dataInterval) clearInterval(dataInterval);\r\n    };\r\n  }, [selectedDevice, refreshInterval, isRefreshing]);\r\n\r\n  const fetchDeviceData = async (deviceId) => {\r\n    try {\r\n      console.log(\"Fetching data for device:\", deviceId);\r\n      const response = await fetch(`http://localhost:5000/api/metrics/iot_data/${deviceId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch device data');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"Received device data:\", result);\r\n      setDeviceData(result.data || []);\r\n    } catch (err) {\r\n      console.error('Error fetching device data:', err);\r\n      // Use fallback data on error with IoT-specific metrics\r\n      setDeviceData([{\r\n        device_id: deviceId,\r\n        session_id: 'fallback-session',\r\n        timestamp: new Date().toISOString(),\r\n        metrics: {\r\n          clicks_per_second: 4,\r\n          movements_count: 120,\r\n          dpi: 16000,\r\n          polling_rate: 1000,\r\n          avg_click_distance: 42.5,\r\n          button_count: 8\r\n        },\r\n        status: {\r\n          under_attack: false,\r\n          attack_duration: 0,\r\n          battery_level: 85,\r\n          connection_quality: 95\r\n        }\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const fetchSecurityAlerts = async (deviceId) => {\r\n    try {\r\n      console.log(\"Fetching security alerts for device:\", deviceId);\r\n      const response = await fetch(`http://localhost:5000/api/security/device_alerts/${deviceId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch security alerts');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"Received security alerts:\", result);\r\n      setSecurityAlerts(result.alerts || []);\r\n    } catch (err) {\r\n      console.error('Error fetching security alerts:', err);\r\n      // Use fallback data on error\r\n      setSecurityAlerts([{\r\n        timestamp: new Date().toISOString(),\r\n        event_type: 'attack_detected',\r\n        details: {\r\n          attack_type: 'ping_flood',\r\n          intensity: 72,\r\n          threshold: 50\r\n        },\r\n        severity: 'critical'\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleString();\r\n    } catch (e) {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const getMostRecentData = () => {\r\n    if (!deviceData || deviceData.length === 0) return null;\r\n    return deviceData[deviceData.length - 1];\r\n  };\r\n\r\n  const getLatestMetrics = () => {\r\n    const recent = getMostRecentData();\r\n    if (!recent || !recent.metrics) return null;\r\n    return recent.metrics;\r\n  };\r\n\r\n  const getDeviceStatus = () => {\r\n    const recent = getMostRecentData();\r\n    if (!recent || !recent.status) return { under_attack: false };\r\n    return recent.status;\r\n  };\r\n\r\n  // Fixed function to properly reflect attack status\r\n  const renderDeviceStatus = () => {\r\n    const status = getDeviceStatus();\r\n    // Check for critical alerts in the last minute to determine attack status\r\n    const hasRecentCriticalAlert = securityAlerts.some(alert => {\r\n      const alertTime = new Date(alert.timestamp);\r\n      const now = new Date();\r\n      const timeDiff = (now - alertTime) / 1000; // in seconds\r\n      return alert.severity === 'critical' && timeDiff < 60;\r\n    });\r\n    \r\n    // Consider the device under attack if either status says so OR there's a recent critical alert\r\n    const isAttacked = (status && status.under_attack) || hasRecentCriticalAlert;\r\n    \r\n    return (\r\n      <div style={{\r\n        padding: '15px',\r\n        borderRadius: '8px',\r\n        backgroundColor: isAttacked ? 'rgba(176, 0, 32, 0.1)' : 'rgba(0, 200, 83, 0.1)',\r\n        border: `1px solid ${isAttacked ? 'var(--error-color)' : 'var(--success-color)'}`,\r\n        marginBottom: '20px'\r\n      }}>\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div>\r\n            <h3 style={{ margin: '0 0 10px 0' }}>Device Status</h3>\r\n            <p style={{ \r\n              margin: '0', \r\n              fontWeight: 'bold',\r\n              color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\r\n            }}>\r\n              {isAttacked ? 'UNDER ATTACK' : 'SECURE'}\r\n            </p>\r\n          </div>\r\n          <div style={{\r\n            fontSize: '2rem',\r\n            color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\r\n          }}>\r\n            {isAttacked ? '⚠️' : '✓'}\r\n          </div>\r\n        </div>\r\n        \r\n        {isAttacked && (\r\n          <div style={{ marginTop: '10px' }}>\r\n            <p style={{ margin: '0', fontSize: '0.9rem' }}>\r\n              Attack duration: {status.attack_duration || 0} seconds\r\n            </p>\r\n            <p style={{ margin: '5px 0 0 0', fontSize: '0.9rem' }}>\r\n              Security alert: DDoS protection engaged, traffic filtering active\r\n            </p>\r\n            <p style={{ margin: '5px 0 0 0', fontSize: '0.9rem' }}>\r\n              Take immediate action to mitigate this attack!\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Enhanced to display IoT-specific metrics with better descriptions\r\n  const renderDeviceMetrics = () => {\r\n    const metrics = getLatestMetrics();\r\n    if (!metrics) return <p>No metrics available</p>;\r\n    \r\n    // Get device type for context-specific descriptions\r\n    const selectedDeviceObj = devices.find(d => d.client_id === selectedDevice);\r\n    const deviceType = selectedDeviceObj ? selectedDeviceObj.device_type : 'mouse_sensor';\r\n    \r\n    return (\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Real-Time IoT Performance Metrics</h2>\r\n        \r\n        {/* IoT Device Description */}\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <p><strong>Device Type:</strong> {deviceType} - A specialized IoT sensor system equipped with accelerometers, gyroscopes, and pressure sensors to capture precise gaming input data and transmit it securely across the network.</p>\r\n          <p><strong>IoT Capabilities:</strong> Edge processing, wireless connectivity, real-time data transmission, anomaly detection, encrypted communication</p>\r\n          <p><strong>Network Protocol:</strong> MQTT over TLS 1.3 with certificate-based authentication</p>\r\n        </div>\r\n        \r\n        {/* Metrics with descriptions */}\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n          {Object.entries(metrics).map(([key, value]) => (\r\n            <div key={key} style={{ flex: '1', minWidth: '150px' }}>\r\n              <h3>{formatMetricName(key)}</h3>\r\n              <p style={{ fontSize: '2rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {formatMetricValue(key, value)}\r\n              </p>\r\n              <p style={{ fontSize: '0.8rem', margin: '0', color: '#666' }}>\r\n                {getMetricDescription(key, deviceType)}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* IoT Network Statistics */}\r\n        <div style={{ marginTop: '20px', borderTop: '1px solid var(--border-color)', paddingTop: '15px' }}>\r\n          <h3>IoT Network Statistics</h3>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Packet Loss</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '4.2%' : '0.01%'}\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Latency</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '12ms' : '2ms'}\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Signal Strength</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '-65dBm' : '-42dBm'}\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Power Consumption</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '120mW' : '85mW'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper functions for better metric presentation\r\n  const formatMetricName = (key) => {\r\n    // Convert snake_case to Title Case\r\n    return key.split('_').map(word => \r\n      word.charAt(0).toUpperCase() + word.slice(1)\r\n    ).join(' ');\r\n  };\r\n\r\n  const formatMetricValue = (key, value) => {\r\n    // Format values with appropriate units\r\n    if (key === 'avg_click_distance') return `${value}px`;\r\n    if (key === 'polling_rate') return `${value}Hz`;\r\n    if (key === 'dpi') return value.toLocaleString();\r\n    return value;\r\n  };\r\n\r\n  const getMetricDescription = (key, deviceType) => {\r\n    const descriptions = {\r\n      clicks_per_second: 'Number of input events per second detected by the pressure sensors',\r\n      movements_count: 'Total movement events tracked by motion sensors',\r\n      dpi: 'Resolution of the optical/laser position sensor',\r\n      polling_rate: 'Sensor data sampling frequency',\r\n      avg_click_distance: 'Average pixel distance between clicks measured by position sensors',\r\n      button_count: 'Number of discrete input sensors on device'\r\n    };\r\n    \r\n    return descriptions[key] || `IoT sensor data metric for ${deviceType}`;\r\n  };\r\n\r\n  // Enhanced security alerts with better formatting\r\n  const renderSecurityAlerts = () => {\r\n    if (!securityAlerts || securityAlerts.length === 0) {\r\n      return (\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Security Alerts</h2>\r\n          <p>No security alerts detected for this IoT sensor</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Security Alerts</h2>\r\n        <div style={{ overflowY: 'auto', maxHeight: '300px' }}>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Timestamp</th>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Event Type</th>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Severity</th>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {securityAlerts.slice().reverse().map((alert, index) => (\r\n                <tr key={index}>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    {formatDate(alert.timestamp)}\r\n                  </td>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    {formatEventType(alert.event_type)}\r\n                  </td>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    <span style={{ \r\n                      display: 'inline-block',\r\n                      padding: '4px 8px',\r\n                      borderRadius: '4px',\r\n                      backgroundColor: alert.severity === 'critical' ? 'var(--error-color)' : '#ff9800',\r\n                      color: 'white',\r\n                      fontWeight: 'bold',\r\n                      fontSize: '0.8rem'\r\n                    }}>\r\n                      {alert.severity.toUpperCase()}\r\n                    </span>\r\n                  </td>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    {formatAlertDetails(alert)}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper functions for security alerts\r\n  const formatEventType = (eventType) => {\r\n    // Make event types more descriptive\r\n    if (eventType === 'attack_detected') return 'Network Attack Detected';\r\n    if (eventType === 'attack_resolved') return 'Attack Mitigation Successful';\r\n    return eventType.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\r\n  };\r\n\r\n  const formatAlertDetails = (alert) => {\r\n    if (!alert.details) return 'No details available';\r\n    \r\n    if (typeof alert.details === 'string') {\r\n      try {\r\n        const details = JSON.parse(alert.details);\r\n        return formatDetailsObject(details);\r\n      } catch (e) {\r\n        return alert.details;\r\n      }\r\n    }\r\n    \r\n    return formatDetailsObject(alert.details);\r\n  };\r\n\r\n  const formatDetailsObject = (details) => {\r\n    if (details.attack_type === 'ping_flood') {\r\n      return `DDoS attack detected: ${details.intensity} packets/sec (threshold: ${details.threshold}). IoT firewall engaged.`;\r\n    }\r\n    \r\n    if (details.duration) {\r\n      return `Attack resolved after ${details.duration} seconds. Normal operation restored.`;\r\n    }\r\n    \r\n    return JSON.stringify(details);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading IoT devices...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"card\" style={{ color: 'var(--error-color)' }}>\r\n        <h2>Error</h2>\r\n        <p>{error}</p>\r\n        <button \r\n          className=\"btn btn-primary\" \r\n          onClick={() => window.location.reload()}\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>IoT Sensor Network Monitoring</h1>\r\n      <p>Monitor your IoT gaming equipment sensors, network performance and security in real-time</p>\r\n\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\r\n        <div>\r\n          <select \r\n            value={selectedDevice || ''}\r\n            onChange={(e) => setSelectedDevice(e.target.value)}\r\n            className=\"form-control\"\r\n            style={{ padding: '8px', minWidth: '200px' }}\r\n          >\r\n            <option value=\"\">Select an IoT sensor</option>\r\n            {devices.map(device => (\r\n              <option key={device.client_id} value={device.client_id}>\r\n                {device.name} ({device.device_type})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Refresh interval:\r\n            <select \r\n              value={refreshInterval}\r\n              onChange={(e) => setRefreshInterval(parseInt(e.target.value))}\r\n              className=\"form-control\"\r\n              style={{ marginLeft: '10px', padding: '8px' }}\r\n            >\r\n              <option value=\"1\">1 second</option>\r\n              <option value=\"5\">5 seconds</option>\r\n              <option value=\"10\">10 seconds</option>\r\n              <option value=\"30\">30 seconds</option>\r\n            </select>\r\n          </label>\r\n          \r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setIsRefreshing(!isRefreshing)}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            {isRefreshing ? 'Pause' : 'Resume'} Updates\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedDevice ? (\r\n        <>\r\n          {renderDeviceStatus()}\r\n          {renderDeviceMetrics()}\r\n          {renderSecurityAlerts()}\r\n          <DeviceHeatmap deviceId={selectedDevice} />\r\n          {/* Add the Mouse Button Usage Heatmap component */}\r\n          {devices.find(d => d.client_id === selectedDevice)?.device_type.includes('mouse') && (\r\n            <MouseButtonHeatmap deviceId={selectedDevice} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">No IoT Device Selected</h2>\r\n          <p>Please select an IoT device sensor from the dropdown to view its metrics and security status.</p>\r\n          \r\n          {devices.length === 0 && (\r\n            <div style={{ marginTop: '20px' }}>\r\n              <p>No IoT devices found in your account.</p>\r\n              <p>To add a device, go to the Devices page and register a new device with type 'mouse_sensor', 'keyboard_sensor', or 'headset_sensor'.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">IoT Security Recommendations</h2>\r\n        <ul>\r\n          <li>Keep IoT firmware updated with the latest security patches</li>\r\n          <li>Implement network segmentation to isolate IoT devices</li>\r\n          <li>Use strong, unique credentials for each device</li>\r\n          <li>Enable TLS for all device communication</li>\r\n          <li>Regularly audit device access and traffic patterns</li>\r\n          <li>Implement intrusion detection at the edge gateway</li>\r\n          <li>Ensure proper certificate management and rotation</li>\r\n        </ul>\r\n        \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: 'rgba(98, 0, 234, 0.1)', borderRadius: '8px' }}>\r\n          <h3 style={{ margin: '0 0 10px 0' }}>DDoS Attack Protection for IoT Gaming Sensors</h3>\r\n          <p style={{ margin: '0 0 10px 0' }}>\r\n            This monitoring system implements a multilayered defense against various DDoS attacks targeting your gaming sensors:\r\n          </p>\r\n          <ol>\r\n            <li><strong>Edge Filtering:</strong> Attack traffic is detected and filtered at the sensor level before impacting performance</li>\r\n            <li><strong>Adaptive Rate Limiting:</strong> Dynamically adjusts traffic thresholds based on historical patterns</li>\r\n            <li><strong>Signature-Based Detection:</strong> Identifies known attack patterns and automatically applies countermeasures</li>\r\n            <li><strong>Anomaly Detection:</strong> Machine learning algorithms identify deviations from normal traffic</li>\r\n            <li><strong>Secure Bootstrapping:</strong> Devices use mutual authentication with the gateway to prevent impersonation</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IoTDevices;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}