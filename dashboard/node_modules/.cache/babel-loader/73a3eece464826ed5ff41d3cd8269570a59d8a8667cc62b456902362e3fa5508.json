{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malus\\\\secure-esports-tracker\\\\dashboard\\\\src\\\\pages\\\\DeviceManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceManager = ({\n  user\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newDeviceName, setNewDeviceName] = useState('');\n  const [newDeviceType, setNewDeviceType] = useState('keyboard');\n  const [debugInfo, setDebugInfo] = useState({});\n  useEffect(() => {\n    const fetchDevices = async () => {\n      setLoading(true);\n      setDebugInfo({\n        stage: 'Starting fetch',\n        timestamp: new Date().toISOString()\n      });\n      try {\n        const token = localStorage.getItem('authToken');\n        setDebugInfo(prev => ({\n          ...prev,\n          token: token ? `${token.substring(0, 10)}...` : 'null',\n          stage: 'Retrieved token'\n        }));\n        console.log('Using token:', token);\n\n        // First, let's check what the current user is\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Current user',\n          user\n        }));\n        console.log('Current user:', user);\n\n        // Make a direct fetch call with detailed error logging\n        const fullUrl = 'http://localhost:5000/api/devices';\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Fetching from URL',\n          url: fullUrl\n        }));\n        console.log('Fetching from:', fullUrl);\n        const response = await fetch(fullUrl, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Received response',\n          status: response.status,\n          statusText: response.statusText\n        }));\n        console.log('Response status:', response.status, response.statusText);\n        if (!response.ok) {\n          // Try to get the error message from the response\n          let errorText;\n          try {\n            const errorData = await response.json();\n            errorText = errorData.error || response.statusText;\n          } catch {\n            errorText = (await response.text()) || response.statusText;\n          }\n          setDebugInfo(prev => ({\n            ...prev,\n            stage: 'Error',\n            error: errorText\n          }));\n          console.error('Response error:', errorText);\n          throw new Error(`Failed to fetch devices: ${response.status} ${errorText}`);\n        }\n\n        // Log the raw response\n        const responseText = await response.text();\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Parsing response',\n          responseText: responseText.substring(0, 100) + '...'\n        }));\n        console.log('Response text:', responseText);\n\n        // Parse the JSON (separately to catch JSON errors)\n        let data;\n        try {\n          data = JSON.parse(responseText);\n        } catch (e) {\n          setDebugInfo(prev => ({\n            ...prev,\n            stage: 'JSON parse error',\n            parseError: e.message\n          }));\n          console.error('JSON parse error:', e);\n          throw new Error(`Invalid JSON response: ${e.message}`);\n        }\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Parsed data',\n          data: JSON.stringify(data).substring(0, 100) + '...'\n        }));\n        console.log('Devices data:', data);\n        if (Array.isArray(data.devices)) {\n          setDevices(data.devices);\n        } else {\n          // Use sample devices if server doesn't return an array\n          setDevices([{\n            client_id: 'sample1',\n            name: 'Sample Gaming PC',\n            device_type: 'system',\n            status: 'active',\n            registered_at: new Date().toISOString()\n          }, {\n            client_id: 'sample2',\n            name: 'Sample Gaming Keyboard',\n            device_type: 'keyboard',\n            status: 'active',\n            registered_at: new Date().toISOString()\n          }]);\n          setDebugInfo(prev => ({\n            ...prev,\n            stage: 'Using sample data',\n            reason: 'Non-array response'\n          }));\n          console.warn('Using sample devices data - server response was not an array');\n        }\n      } catch (err) {\n        console.error('Error fetching devices:', err);\n        setError(`Failed to load devices. ${err.message}`);\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Exception',\n          message: err.message,\n          stack: err.stack\n        }));\n\n        // Use sample devices on error\n        setDevices([{\n          client_id: 'sample1',\n          name: 'Sample Gaming PC (Fallback)',\n          device_type: 'system',\n          status: 'active',\n          registered_at: new Date().toISOString()\n        }, {\n          client_id: 'sample2',\n          name: 'Sample Gaming Keyboard (Fallback)',\n          device_type: 'keyboard',\n          status: 'active',\n          registered_at: new Date().toISOString()\n        }]);\n      } finally {\n        setLoading(false);\n        setDebugInfo(prev => ({\n          ...prev,\n          stage: 'Completed',\n          timestamp: new Date().toISOString()\n        }));\n      }\n    };\n    fetchDevices();\n  }, [user]);\n  const handleAddDevice = async e => {\n    e.preventDefault();\n    if (!newDeviceName) {\n      return;\n    }\n    try {\n      // In a real implementation, would register device with server\n      // For demo, just add to local state\n      const newDevice = {\n        client_id: 'dev_' + Math.random().toString(36).substr(2, 9),\n        name: newDeviceName,\n        device_type: newDeviceType,\n        status: 'active',\n        registered_at: new Date().toISOString()\n      };\n      setDevices([...devices, newDevice]);\n      setNewDeviceName('');\n      setNewDeviceType('keyboard');\n    } catch (err) {\n      console.error('Error adding device:', err);\n      setError('Failed to add device. Please try again.');\n    }\n  };\n  const handleStatusChange = (deviceId, newStatus) => {\n    setDevices(devices.map(device => device.client_id === deviceId ? {\n      ...device,\n      status: newStatus\n    } : device));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading devices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Device Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manage your connected gaming equipment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        color: 'var(--error-color)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          fontSize: '0.8rem',\n          background: '#f5f5f5',\n          padding: '10px',\n          overflow: 'auto',\n          maxHeight: '200px'\n        },\n        children: JSON.stringify(debugInfo, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Add New Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddDevice,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"deviceName\",\n            children: \"Device Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"deviceName\",\n            className: \"form-control\",\n            value: newDeviceName,\n            onChange: e => setNewDeviceName(e.target.value),\n            placeholder: \"Enter device name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"deviceType\",\n            children: \"Device Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"deviceType\",\n            className: \"form-control\",\n            value: newDeviceType,\n            onChange: e => setNewDeviceType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"keyboard\",\n              children: \"Keyboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mouse\",\n              children: \"Mouse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"system\",\n              children: \"System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Add Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Registered Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), devices.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: devices.map(device => {\n          var _device$status;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '15px',\n              marginBottom: '15px',\n              borderRadius: '8px',\n              border: '1px solid var(--border-color)',\n              backgroundColor: device.status === 'active' ? 'rgba(0, 200, 83, 0.1)' : 'rgba(200, 200, 200, 0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    margin: '0 0 5px 0'\n                  },\n                  children: device.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: '0',\n                    fontSize: '0.8rem'\n                  },\n                  children: [\"ID: \", device.client_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: '0',\n                    fontSize: '0.8rem'\n                  },\n                  children: [\"Type: \", device.device_type || 'unknown']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    margin: '5px 0',\n                    fontSize: '0.9rem'\n                  },\n                  children: [\"Registered: \", new Date(device.registered_at).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    padding: '5px 10px',\n                    borderRadius: '20px',\n                    backgroundColor: device.status === 'active' ? 'var(--success-color)' : 'var(--border-color)',\n                    color: device.status === 'active' ? 'white' : 'var(--text-color)',\n                    fontSize: '0.8rem'\n                  },\n                  children: ((_device$status = device.status) === null || _device$status === void 0 ? void 0 : _device$status.toUpperCase()) || 'UNKNOWN'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px'\n              },\n              children: [device.status === 'active' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                style: {\n                  backgroundColor: 'rgba(176, 0, 32, 0.1)',\n                  color: 'var(--error-color)'\n                },\n                onClick: () => handleStatusChange(device.client_id, 'disabled'),\n                children: \"Disable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                style: {\n                  backgroundColor: 'rgba(0, 200, 83, 0.1)',\n                  color: 'var(--success-color)'\n                },\n                onClick: () => handleStatusChange(device.client_id, 'active'),\n                children: \"Enable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                style: {\n                  marginLeft: '10px'\n                },\n                onClick: () => alert('Agent download would start here'),\n                children: \"Download Agent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, device.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No devices registered. Add your first device above.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Security Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All device communications are encrypted end-to-end. Your device data is protected with industry-standard encryption and secure authentication.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgba(98, 0, 234, 0.1)',\n          padding: '15px',\n          borderRadius: '8px',\n          border: '1px solid var(--primary-color)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Security Features:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"End-to-end encryption of all data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Unique encryption keys per device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Secure device registration and authentication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Tamper-evident data integrity verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceManager, \"xJfN9aHF46aJg+yuqXKWecJpLLE=\");\n_c = DeviceManager;\nexport default DeviceManager;\nvar _c;\n$RefreshReg$(_c, \"DeviceManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DeviceManager","user","_s","devices","setDevices","loading","setLoading","error","setError","newDeviceName","setNewDeviceName","newDeviceType","setNewDeviceType","debugInfo","setDebugInfo","fetchDevices","stage","timestamp","Date","toISOString","token","localStorage","getItem","prev","substring","console","log","fullUrl","url","response","fetch","headers","status","statusText","ok","errorText","errorData","json","text","Error","responseText","data","JSON","parse","e","parseError","message","stringify","Array","isArray","client_id","name","device_type","registered_at","reason","warn","err","stack","handleAddDevice","preventDefault","newDevice","Math","random","toString","substr","handleStatusChange","deviceId","newStatus","map","device","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","background","padding","overflow","maxHeight","onClick","window","location","reload","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","length","_device$status","marginBottom","borderRadius","border","backgroundColor","display","justifyContent","alignItems","margin","toLocaleString","toUpperCase","marginTop","marginLeft","alert","_c","$RefreshReg$"],"sources":["C:/Users/malus/secure-esports-tracker/dashboard/src/pages/DeviceManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\nconst DeviceManager = ({ user }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newDeviceName, setNewDeviceName] = useState('');\r\n  const [newDeviceType, setNewDeviceType] = useState('keyboard');\r\n  const [debugInfo, setDebugInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchDevices = async () => {\r\n      setLoading(true);\r\n      setDebugInfo({\r\n        stage: 'Starting fetch',\r\n        timestamp: new Date().toISOString()\r\n      });\r\n      \r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        setDebugInfo(prev => ({ \r\n          ...prev, \r\n          token: token ? `${token.substring(0, 10)}...` : 'null',\r\n          stage: 'Retrieved token'\r\n        }));\r\n        \r\n        console.log('Using token:', token);\r\n        \r\n        // First, let's check what the current user is\r\n        setDebugInfo(prev => ({ ...prev, stage: 'Current user', user }));\r\n        console.log('Current user:', user);\r\n        \r\n        // Make a direct fetch call with detailed error logging\r\n        const fullUrl = 'http://localhost:5000/api/devices';\r\n        setDebugInfo(prev => ({ ...prev, stage: 'Fetching from URL', url: fullUrl }));\r\n        console.log('Fetching from:', fullUrl);\r\n        \r\n        const response = await fetch(fullUrl, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        setDebugInfo(prev => ({ \r\n          ...prev, \r\n          stage: 'Received response',\r\n          status: response.status,\r\n          statusText: response.statusText\r\n        }));\r\n        console.log('Response status:', response.status, response.statusText);\r\n        \r\n        if (!response.ok) {\r\n          // Try to get the error message from the response\r\n          let errorText;\r\n          try {\r\n            const errorData = await response.json();\r\n            errorText = errorData.error || response.statusText;\r\n          } catch {\r\n            errorText = await response.text() || response.statusText;\r\n          }\r\n          \r\n          setDebugInfo(prev => ({ ...prev, stage: 'Error', error: errorText }));\r\n          console.error('Response error:', errorText);\r\n          throw new Error(`Failed to fetch devices: ${response.status} ${errorText}`);\r\n        }\r\n\r\n        // Log the raw response\r\n        const responseText = await response.text();\r\n        setDebugInfo(prev => ({ ...prev, stage: 'Parsing response', responseText: responseText.substring(0, 100) + '...' }));\r\n        console.log('Response text:', responseText);\r\n        \r\n        // Parse the JSON (separately to catch JSON errors)\r\n        let data;\r\n        try {\r\n          data = JSON.parse(responseText);\r\n        } catch (e) {\r\n          setDebugInfo(prev => ({ ...prev, stage: 'JSON parse error', parseError: e.message }));\r\n          console.error('JSON parse error:', e);\r\n          throw new Error(`Invalid JSON response: ${e.message}`);\r\n        }\r\n        \r\n        setDebugInfo(prev => ({ ...prev, stage: 'Parsed data', data: JSON.stringify(data).substring(0, 100) + '...' }));\r\n        console.log('Devices data:', data);\r\n        \r\n        if (Array.isArray(data.devices)) {\r\n          setDevices(data.devices);\r\n        } else {\r\n          // Use sample devices if server doesn't return an array\r\n          setDevices([\r\n            {\r\n              client_id: 'sample1',\r\n              name: 'Sample Gaming PC',\r\n              device_type: 'system',\r\n              status: 'active',\r\n              registered_at: new Date().toISOString()\r\n            },\r\n            {\r\n              client_id: 'sample2',\r\n              name: 'Sample Gaming Keyboard',\r\n              device_type: 'keyboard',\r\n              status: 'active',\r\n              registered_at: new Date().toISOString()\r\n            }\r\n          ]);\r\n          setDebugInfo(prev => ({ ...prev, stage: 'Using sample data', reason: 'Non-array response' }));\r\n          console.warn('Using sample devices data - server response was not an array');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching devices:', err);\r\n        setError(`Failed to load devices. ${err.message}`);\r\n        setDebugInfo(prev => ({ ...prev, stage: 'Exception', message: err.message, stack: err.stack }));\r\n        \r\n        // Use sample devices on error\r\n        setDevices([\r\n          {\r\n            client_id: 'sample1',\r\n            name: 'Sample Gaming PC (Fallback)',\r\n            device_type: 'system',\r\n            status: 'active',\r\n            registered_at: new Date().toISOString()\r\n          },\r\n          {\r\n            client_id: 'sample2',\r\n            name: 'Sample Gaming Keyboard (Fallback)',\r\n            device_type: 'keyboard',\r\n            status: 'active',\r\n            registered_at: new Date().toISOString()\r\n          }\r\n        ]);\r\n      } finally {\r\n        setLoading(false);\r\n        setDebugInfo(prev => ({ ...prev, stage: 'Completed', timestamp: new Date().toISOString() }));\r\n      }\r\n    };\r\n\r\n    fetchDevices();\r\n  }, [user]);\r\n\r\n  const handleAddDevice = async (e) => {\r\n    e.preventDefault();\r\n    if (!newDeviceName) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // In a real implementation, would register device with server\r\n      // For demo, just add to local state\r\n      const newDevice = {\r\n        client_id: 'dev_' + Math.random().toString(36).substr(2, 9),\r\n        name: newDeviceName,\r\n        device_type: newDeviceType,\r\n        status: 'active',\r\n        registered_at: new Date().toISOString()\r\n      };\r\n\r\n      setDevices([...devices, newDevice]);\r\n      setNewDeviceName('');\r\n      setNewDeviceType('keyboard');\r\n    } catch (err) {\r\n      console.error('Error adding device:', err);\r\n      setError('Failed to add device. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (deviceId, newStatus) => {\r\n    setDevices(devices.map(device => \r\n      device.client_id === deviceId \r\n        ? { ...device, status: newStatus } \r\n        : device\r\n    ));\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading devices...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Device Manager</h1>\r\n      <p>Manage your connected gaming equipment</p>\r\n\r\n      {error && (\r\n        <div className=\"card\" style={{ color: 'var(--error-color)' }}>\r\n          <h2>Error</h2>\r\n          <p>{error}</p>\r\n          <pre style={{ \r\n            fontSize: '0.8rem', \r\n            background: '#f5f5f5', \r\n            padding: '10px', \r\n            overflow: 'auto',\r\n            maxHeight: '200px'\r\n          }}>\r\n            {JSON.stringify(debugInfo, null, 2)}\r\n          </pre>\r\n          <button \r\n            className=\"btn btn-primary\" \r\n            onClick={() => window.location.reload()}\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Add New Device</h2>\r\n        <form onSubmit={handleAddDevice}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"deviceName\">Device Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"deviceName\"\r\n              className=\"form-control\"\r\n              value={newDeviceName}\r\n              onChange={(e) => setNewDeviceName(e.target.value)}\r\n              placeholder=\"Enter device name\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"deviceType\">Device Type</label>\r\n            <select\r\n              id=\"deviceType\"\r\n              className=\"form-control\"\r\n              value={newDeviceType}\r\n              onChange={(e) => setNewDeviceType(e.target.value)}\r\n            >\r\n              <option value=\"keyboard\">Keyboard</option>\r\n              <option value=\"mouse\">Mouse</option>\r\n              <option value=\"system\">System</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">Add Device</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Registered Devices</h2>\r\n        {devices.length > 0 ? (\r\n          <div>\r\n            {devices.map(device => (\r\n              <div key={device.client_id} style={{ \r\n                padding: '15px', \r\n                marginBottom: '15px', \r\n                borderRadius: '8px',\r\n                border: '1px solid var(--border-color)',\r\n                backgroundColor: device.status === 'active' ? 'rgba(0, 200, 83, 0.1)' : 'rgba(200, 200, 200, 0.1)'\r\n              }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <div>\r\n                    <h3 style={{ margin: '0 0 5px 0' }}>{device.name}</h3>\r\n                    <p style={{ margin: '0', fontSize: '0.8rem' }}>ID: {device.client_id}</p>\r\n                    <p style={{ margin: '0', fontSize: '0.8rem' }}>Type: {device.device_type || 'unknown'}</p>\r\n                    <p style={{ margin: '5px 0', fontSize: '0.9rem' }}>\r\n                      Registered: {new Date(device.registered_at).toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ \r\n                      display: 'inline-block', \r\n                      padding: '5px 10px', \r\n                      borderRadius: '20px', \r\n                      backgroundColor: device.status === 'active' ? 'var(--success-color)' : 'var(--border-color)',\r\n                      color: device.status === 'active' ? 'white' : 'var(--text-color)',\r\n                      fontSize: '0.8rem'\r\n                    }}>\r\n                      {device.status?.toUpperCase() || 'UNKNOWN'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div style={{ marginTop: '10px' }}>\r\n                  {device.status === 'active' ? (\r\n                    <button \r\n                      className=\"btn\" \r\n                      style={{ backgroundColor: 'rgba(176, 0, 32, 0.1)', color: 'var(--error-color)' }}\r\n                      onClick={() => handleStatusChange(device.client_id, 'disabled')}\r\n                    >\r\n                      Disable\r\n                    </button>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn\" \r\n                      style={{ backgroundColor: 'rgba(0, 200, 83, 0.1)', color: 'var(--success-color)' }}\r\n                      onClick={() => handleStatusChange(device.client_id, 'active')}\r\n                    >\r\n                      Enable\r\n                    </button>\r\n                  )}\r\n                  <button \r\n                    className=\"btn\" \r\n                    style={{ marginLeft: '10px' }}\r\n                    onClick={() => alert('Agent download would start here')}\r\n                  >\r\n                    Download Agent\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No devices registered. Add your first device above.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Security Information</h2>\r\n        <p>\r\n          All device communications are encrypted end-to-end. Your device data is \r\n          protected with industry-standard encryption and secure authentication.\r\n        </p>\r\n        <div style={{ \r\n          backgroundColor: 'rgba(98, 0, 234, 0.1)', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          border: '1px solid var(--primary-color)'\r\n        }}>\r\n          <h3>Security Features:</h3>\r\n          <ul>\r\n            <li>End-to-end encryption of all data</li>\r\n            <li>Unique encryption keys per device</li>\r\n            <li>Secure device registration and authentication</li>\r\n            <li>Tamper-evident data integrity verification</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}