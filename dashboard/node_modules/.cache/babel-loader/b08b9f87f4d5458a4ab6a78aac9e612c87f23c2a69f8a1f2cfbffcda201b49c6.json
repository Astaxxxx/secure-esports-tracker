{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malus\\\\secure-esports-tracker\\\\dashboard\\\\src\\\\pages\\\\IoTDevices.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchWithAuth, getIoTDeviceData, getDeviceSecurityAlerts } from '../utils/api';\nimport './IoTDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IoTDevices = ({\n  user\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [deviceData, setDeviceData] = useState([]);\n  const [securityAlerts, setSecurityAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshInterval, setRefreshInterval] = useState(5); // in seconds\n  const [isRefreshing, setIsRefreshing] = useState(true);\n  useEffect(() => {\n    // Load devices from API\n    const fetchDevices = async () => {\n      try {\n        const response = await fetchWithAuth('/api/devices');\n        if (!response.ok) {\n          throw new Error('Failed to fetch devices');\n        }\n        const data = await response.json();\n        console.log(\"Received devices data:\", data);\n\n        // Filter IoT devices with updated device types\n        const iotDevices = data.devices.filter(device => device.device_type === 'mouse' || device.device_type === 'keyboard' || device.device_type === 'headset' || device.device_type === 'mouse_sensor' || device.device_type === 'keyboard_sensor' || device.device_type === 'headset_sensor');\n\n        // Rename devices to be more IoT-specific\n        const renamedDevices = iotDevices.map(device => {\n          // Update names to better indicate IoT sensor nature\n          if (device.device_type === 'mouse' || device.name.includes('Mouse')) {\n            return {\n              ...device,\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\n              device_type: device.device_type === 'mouse' ? 'mouse_sensor' : device.device_type\n            };\n          }\n          if (device.device_type === 'keyboard' || device.name.includes('Keyboard')) {\n            return {\n              ...device,\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\n              device_type: device.device_type === 'keyboard' ? 'keyboard_sensor' : device.device_type\n            };\n          }\n          if (device.device_type === 'headset' || device.name.includes('Headset')) {\n            return {\n              ...device,\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\n              device_type: device.device_type === 'headset' ? 'headset_sensor' : device.device_type\n            };\n          }\n          return device;\n        });\n        setDevices(renamedDevices);\n\n        // Select first device by default\n        if (renamedDevices.length > 0 && !selectedDevice) {\n          setSelectedDevice(renamedDevices[0].client_id);\n        }\n      } catch (err) {\n        console.error('Error fetching devices:', err);\n        setError('Failed to load devices. Please try again.');\n\n        // Set fallback devices for demo purposes with IoT sensor names\n        const fallbackDevices = [{\n          client_id: 'mouse-001',\n          name: 'Gaming Mouse Sensor',\n          device_type: 'mouse_sensor',\n          status: 'active'\n        }, {\n          client_id: 'keyboard-001',\n          name: 'Gaming Keyboard Sensor',\n          device_type: 'keyboard_sensor',\n          status: 'active'\n        }];\n        setDevices(fallbackDevices);\n        if (!selectedDevice) {\n          setSelectedDevice(fallbackDevices[0].client_id);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDevices();\n\n    // Poll for devices every 30 seconds\n    const deviceInterval = setInterval(fetchDevices, 30000);\n    return () => clearInterval(deviceInterval);\n  }, [selectedDevice]);\n  useEffect(() => {\n    // Set up the data refresh interval\n    let dataInterval;\n    if (isRefreshing && selectedDevice) {\n      const fetchData = async () => {\n        try {\n          await Promise.all([fetchDeviceData(selectedDevice), fetchSecurityAlerts(selectedDevice)]);\n        } catch (err) {\n          console.error('Error refreshing data:', err);\n        }\n      };\n\n      // Fetch immediately\n      fetchData();\n\n      // Then set interval\n      dataInterval = setInterval(fetchData, refreshInterval * 1000);\n    }\n    return () => {\n      if (dataInterval) clearInterval(dataInterval);\n    };\n  }, [selectedDevice, refreshInterval, isRefreshing]);\n  const fetchDeviceData = async deviceId => {\n    try {\n      console.log(\"Fetching data for device:\", deviceId);\n      const result = await getIoTDeviceData(deviceId);\n      console.log(\"Received device data:\", result);\n      setDeviceData(result.data || []);\n    } catch (err) {\n      console.error('Error fetching device data:', err);\n      // Use fallback data on error with IoT-specific metrics\n      setDeviceData([{\n        device_id: deviceId,\n        session_id: 'fallback-session',\n        timestamp: new Date().toISOString(),\n        metrics: {\n          clicks_per_second: 4,\n          movements_count: 120,\n          dpi: 16000,\n          polling_rate: 1000,\n          avg_click_distance: 42.5,\n          button_count: 8\n        },\n        status: {\n          under_attack: false,\n          attack_duration: 0,\n          battery_level: 85,\n          connection_quality: 95\n        }\n      }]);\n    }\n  };\n  const fetchSecurityAlerts = async deviceId => {\n    try {\n      console.log(\"Fetching security alerts for device:\", deviceId);\n      const result = await getDeviceSecurityAlerts(deviceId);\n      console.log(\"Received security alerts:\", result);\n      setSecurityAlerts(result.alerts || []);\n    } catch (err) {\n      console.error('Error fetching security alerts:', err);\n      // Use fallback data on error\n      setSecurityAlerts([{\n        timestamp: new Date().toISOString(),\n        event_type: 'attack_detected',\n        details: {\n          attack_type: 'ping_flood',\n          intensity: 72,\n          threshold: 50\n        },\n        severity: 'critical'\n      }]);\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    } catch (e) {\n      return dateString;\n    }\n  };\n  const getMostRecentData = () => {\n    if (!deviceData || deviceData.length === 0) return null;\n    return deviceData[deviceData.length - 1];\n  };\n  const getLatestMetrics = () => {\n    const recent = getMostRecentData();\n    if (!recent || !recent.metrics) return null;\n    return recent.metrics;\n  };\n  const getDeviceStatus = () => {\n    const recent = getMostRecentData();\n    if (!recent || !recent.status) return {\n      under_attack: false\n    };\n    return recent.status;\n  };\n\n  // Fixed function to properly reflect attack status\n  const renderDeviceStatus = () => {\n    const status = getDeviceStatus();\n    const isAttacked = status && status.under_attack;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '15px',\n        borderRadius: '8px',\n        backgroundColor: isAttacked ? 'rgba(176, 0, 32, 0.1)' : 'rgba(0, 200, 83, 0.1)',\n        border: `1px solid ${isAttacked ? 'var(--error-color)' : 'var(--success-color)'}`,\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: \"Device Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '0',\n              fontWeight: 'bold',\n              color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\n            },\n            children: isAttacked ? 'UNDER ATTACK' : 'SECURE'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '2rem',\n            color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\n          },\n          children: isAttacked ? '⚠️' : '✓'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), isAttacked && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0',\n            fontSize: '0.9rem'\n          },\n          children: [\"Attack duration: \", status.attack_duration || 0, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            fontSize: '0.9rem'\n          },\n          children: \"Security alert: DDoS protection engaged, traffic filtering active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0 0 0',\n            fontSize: '0.9rem'\n          },\n          children: \"Take immediate action to mitigate this attack!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Enhanced to display IoT-specific metrics with better descriptions\n  const renderDeviceMetrics = () => {\n    const metrics = getLatestMetrics();\n    if (!metrics) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No metrics available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 26\n    }, this);\n\n    // Get device type for context-specific descriptions\n    const selectedDeviceObj = devices.find(d => d.client_id === selectedDevice);\n    const deviceType = selectedDeviceObj ? selectedDeviceObj.device_type : 'mouse_sensor';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Real-Time IoT Performance Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Device Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 14\n          }, this), \" \", deviceType, \" - A specialized IoT sensor system equipped with accelerometers, gyroscopes, and pressure sensors to capture precise gaming input data and transmit it securely across the network.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IoT Capabilities:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 14\n          }, this), \" Edge processing, wireless connectivity, real-time data transmission, anomaly detection, encrypted communication\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Network Protocol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 14\n          }, this), \" MQTT over TLS 1.3 with certificate-based authentication\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '20px'\n        },\n        children: Object.entries(metrics).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            minWidth: '150px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: formatMetricName(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '2rem',\n              fontWeight: 'bold',\n              margin: '5px 0'\n            },\n            children: formatMetricValue(key, value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.8rem',\n              margin: '0',\n              color: '#666'\n            },\n            children: getMetricDescription(key, deviceType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          borderTop: '1px solid var(--border-color)',\n          paddingTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"IoT Network Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Packet Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '4.2%' : '0.01%'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Latency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '12ms' : '2ms'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Signal Strength\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '-65dBm' : '-42dBm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: '1',\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Power Consumption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '1.5rem',\n                fontWeight: 'bold',\n                margin: '5px 0'\n              },\n              children: getDeviceStatus().under_attack ? '120mW' : '85mW'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper functions for better metric presentation\n  const formatMetricName = key => {\n    // Convert snake_case to Title Case\n    return key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const formatMetricValue = (key, value) => {\n    // Format values with appropriate units\n    if (key === 'avg_click_distance') return `${value}px`;\n    if (key === 'polling_rate') return `${value}Hz`;\n    if (key === 'dpi') return value.toLocaleString();\n    return value;\n  };\n  const getMetricDescription = (key, deviceType) => {\n    const descriptions = {\n      clicks_per_second: 'Number of input events per second detected by the pressure sensors',\n      movements_count: 'Total movement events tracked by motion sensors',\n      dpi: 'Resolution of the optical/laser position sensor',\n      polling_rate: 'Sensor data sampling frequency',\n      avg_click_distance: 'Average pixel distance between clicks measured by position sensors',\n      button_count: 'Number of discrete input sensors on device'\n    };\n    return descriptions[key] || `IoT sensor data metric for ${deviceType}`;\n  };\n\n  // Enhanced security alerts with better formatting\n  const renderSecurityAlerts = () => {\n    if (!securityAlerts || securityAlerts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Security Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No security alerts detected for this IoT sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Security Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowY: 'auto',\n          maxHeight: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Timestamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Event Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Severity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  textAlign: 'left',\n                  padding: '12px 8px',\n                  position: 'sticky',\n                  top: 0,\n                  backgroundColor: 'var(--card-bg)',\n                  borderBottom: '2px solid var(--border-color)'\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: securityAlerts.slice().reverse().map((alert, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: formatDate(alert.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: formatEventType(alert.event_type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    display: 'inline-block',\n                    padding: '4px 8px',\n                    borderRadius: '4px',\n                    backgroundColor: alert.severity === 'critical' ? 'var(--error-color)' : '#ff9800',\n                    color: 'white',\n                    fontWeight: 'bold',\n                    fontSize: '0.8rem'\n                  },\n                  children: alert.severity.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '12px 8px',\n                  borderBottom: '1px solid var(--border-color)'\n                },\n                children: formatAlertDetails(alert)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper functions for security alerts\n  const formatEventType = eventType => {\n    // Make event types more descriptive\n    if (eventType === 'attack_detected') return 'Network Attack Detected';\n    if (eventType === 'attack_resolved') return 'Attack Mitigation Successful';\n    return eventType.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n  };\n  const formatAlertDetails = alert => {\n    if (!alert.details) return 'No details available';\n    if (typeof alert.details === 'string') {\n      try {\n        const details = JSON.parse(alert.details);\n        return formatDetailsObject(details);\n      } catch (e) {\n        return alert.details;\n      }\n    }\n    return formatDetailsObject(alert.details);\n  };\n  const formatDetailsObject = details => {\n    if (details.attack_type === 'ping_flood') {\n      return `DDoS attack detected: ${details.intensity} packets/sec (threshold: ${details.threshold}). IoT firewall engaged.`;\n    }\n    if (details.duration) {\n      return `Attack resolved after ${details.duration} seconds. Normal operation restored.`;\n    }\n    return JSON.stringify(details);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading IoT devices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IoT Sensor Network Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Monitor your IoT gaming equipment sensors, network performance and security in real-time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedDevice || '',\n          onChange: e => setSelectedDevice(e.target.value),\n          className: \"form-control\",\n          style: {\n            padding: '8px',\n            minWidth: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an IoT sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: device.client_id,\n            children: [device.name, \" (\", device.device_type, \")\"]\n          }, device.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px'\n          },\n          children: [\"Refresh interval:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: refreshInterval,\n            onChange: e => setRefreshInterval(parseInt(e.target.value)),\n            className: \"form-control\",\n            style: {\n              marginLeft: '10px',\n              padding: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1 second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \"30 seconds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setIsRefreshing(!isRefreshing),\n          style: {\n            marginLeft: '10px'\n          },\n          children: [isRefreshing ? 'Pause' : 'Resume', \" Updates\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), selectedDevice ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderDeviceStatus(), renderDeviceMetrics(), renderSecurityAlerts()]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"No IoT Device Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an IoT device sensor from the dropdown to view its metrics and security status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this), devices.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No IoT devices found in your account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To add a device, go to the Devices page and register a new device with type 'mouse_sensor', 'keyboard_sensor', or 'headset_sensor'.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"IoT Security Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Keep IoT firmware updated with the latest security patches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Implement network segmentation to isolate IoT devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use strong, unique credentials for each device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Enable TLS for all device communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Regularly audit device access and traffic patterns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Implement intrusion detection at the edge gateway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Ensure proper certificate management and rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '15px',\n          backgroundColor: 'rgba(98, 0, 234, 0.1)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 10px 0'\n          },\n          children: \"DDoS Attack Protection for IoT Gaming Sensors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0'\n          },\n          children: \"This monitoring system implements a multilayered defense against various DDoS attacks targeting your gaming sensors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Edge Filtering:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), \" Attack traffic is detected and filtered at the sensor level before impacting performance\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Adaptive Rate Limiting:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), \" Dynamically adjusts traffic thresholds based on historical patterns\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Signature-Based Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), \" Identifies known attack patterns and automatically applies countermeasures\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Anomaly Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), \" Machine learning algorithms identify deviations from normal traffic\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Secure Bootstrapping:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), \" Devices use mutual authentication with the gateway to prevent impersonation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"IoT Attack Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To test the security monitoring features of your IoT gaming sensors, you can simulate an attack using the following methods:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'var(--card-bg)',\n          border: '1px solid var(--border-color)',\n          borderRadius: '5px',\n          padding: '15px',\n          fontFamily: 'monospace',\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0 0 10px 0',\n            fontWeight: 'bold'\n          },\n          children: \"DDoS simulation on IoT sensor gateway:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"sudo hping3 -1 --flood -a [SPOOFED_IP] [SENSOR_GATEWAY_IP]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '10px 0 10px 0',\n            fontWeight: 'bold'\n          },\n          children: \"Or using ping with large packets:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ping -f -s 65500 [SENSOR_GATEWAY_IP]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '10px 0 0 0',\n            fontWeight: 'bold'\n          },\n          children: \"For a more distributed attack simulation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"sudo mdk3 [INTERFACE] d -c [CHANNEL] -s 1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '15px',\n          fontSize: '0.9rem',\n          color: 'var(--error-color)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), \" Only perform these tests in your controlled lab environment against your own devices. Unauthorized DoS attacks are illegal and unethical.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n};\n_s(IoTDevices, \"3FJ5ginvTxI2iWpgHjEJNcb+5lc=\");\n_c = IoTDevices;\nexport default IoTDevices;\nvar _c;\n$RefreshReg$(_c, \"IoTDevices\");","map":{"version":3,"names":["React","useState","useEffect","fetchWithAuth","getIoTDeviceData","getDeviceSecurityAlerts","jsxDEV","_jsxDEV","Fragment","_Fragment","IoTDevices","user","_s","devices","setDevices","selectedDevice","setSelectedDevice","deviceData","setDeviceData","securityAlerts","setSecurityAlerts","loading","setLoading","error","setError","refreshInterval","setRefreshInterval","isRefreshing","setIsRefreshing","fetchDevices","response","ok","Error","data","json","console","log","iotDevices","filter","device","device_type","renamedDevices","map","name","includes","length","client_id","err","fallbackDevices","status","deviceInterval","setInterval","clearInterval","dataInterval","fetchData","Promise","all","fetchDeviceData","fetchSecurityAlerts","deviceId","result","device_id","session_id","timestamp","Date","toISOString","metrics","clicks_per_second","movements_count","dpi","polling_rate","avg_click_distance","button_count","under_attack","attack_duration","battery_level","connection_quality","alerts","event_type","details","attack_type","intensity","threshold","severity","formatDate","dateString","date","toLocaleString","e","getMostRecentData","getLatestMetrics","recent","getDeviceStatus","renderDeviceStatus","isAttacked","style","padding","borderRadius","backgroundColor","border","marginBottom","children","display","alignItems","justifyContent","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","color","fontSize","marginTop","renderDeviceMetrics","selectedDeviceObj","find","d","deviceType","className","flexWrap","gap","Object","entries","key","value","flex","minWidth","formatMetricName","formatMetricValue","getMetricDescription","borderTop","paddingTop","split","word","charAt","toUpperCase","slice","join","descriptions","renderSecurityAlerts","overflowY","maxHeight","width","borderCollapse","textAlign","position","top","borderBottom","reverse","alert","index","formatEventType","formatAlertDetails","eventType","replace","c","JSON","parse","formatDetailsObject","duration","stringify","onChange","target","marginRight","parseInt","marginLeft","onClick","fontFamily","overflow","_c","$RefreshReg$"],"sources":["C:/Users/malus/secure-esports-tracker/dashboard/src/pages/IoTDevices.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchWithAuth, getIoTDeviceData, getDeviceSecurityAlerts } from '../utils/api';\r\nimport './IoTDashboard.css';\r\n\r\nconst IoTDevices = ({ user }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [deviceData, setDeviceData] = useState([]);\r\n  const [securityAlerts, setSecurityAlerts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [refreshInterval, setRefreshInterval] = useState(5); // in seconds\r\n  const [isRefreshing, setIsRefreshing] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Load devices from API\r\n    const fetchDevices = async () => {\r\n      try {\r\n        const response = await fetchWithAuth('/api/devices');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch devices');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Received devices data:\", data);\r\n        \r\n        // Filter IoT devices with updated device types\r\n        const iotDevices = data.devices.filter(device => \r\n          device.device_type === 'mouse' || \r\n          device.device_type === 'keyboard' || \r\n          device.device_type === 'headset' ||\r\n          device.device_type === 'mouse_sensor' || \r\n          device.device_type === 'keyboard_sensor' || \r\n          device.device_type === 'headset_sensor'\r\n        );\r\n        \r\n        // Rename devices to be more IoT-specific\r\n        const renamedDevices = iotDevices.map(device => {\r\n          // Update names to better indicate IoT sensor nature\r\n          if (device.device_type === 'mouse' || device.name.includes('Mouse')) {\r\n            return {\r\n              ...device,\r\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\r\n              device_type: device.device_type === 'mouse' ? 'mouse_sensor' : device.device_type\r\n            };\r\n          }\r\n          if (device.device_type === 'keyboard' || device.name.includes('Keyboard')) {\r\n            return {\r\n              ...device,\r\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\r\n              device_type: device.device_type === 'keyboard' ? 'keyboard_sensor' : device.device_type\r\n            };\r\n          }\r\n          if (device.device_type === 'headset' || device.name.includes('Headset')) {\r\n            return {\r\n              ...device,\r\n              name: device.name.includes('Sensor') ? device.name : `${device.name} Sensor`,\r\n              device_type: device.device_type === 'headset' ? 'headset_sensor' : device.device_type\r\n            };\r\n          }\r\n          return device;\r\n        });\r\n        \r\n        setDevices(renamedDevices);\r\n        \r\n        // Select first device by default\r\n        if (renamedDevices.length > 0 && !selectedDevice) {\r\n          setSelectedDevice(renamedDevices[0].client_id);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching devices:', err);\r\n        setError('Failed to load devices. Please try again.');\r\n        \r\n        // Set fallback devices for demo purposes with IoT sensor names\r\n        const fallbackDevices = [\r\n          {\r\n            client_id: 'mouse-001',\r\n            name: 'Gaming Mouse Sensor',\r\n            device_type: 'mouse_sensor',\r\n            status: 'active',\r\n          },\r\n          {\r\n            client_id: 'keyboard-001',\r\n            name: 'Gaming Keyboard Sensor',\r\n            device_type: 'keyboard_sensor',\r\n            status: 'active',\r\n          }\r\n        ];\r\n        setDevices(fallbackDevices);\r\n        if (!selectedDevice) {\r\n          setSelectedDevice(fallbackDevices[0].client_id);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDevices();\r\n    \r\n    // Poll for devices every 30 seconds\r\n    const deviceInterval = setInterval(fetchDevices, 30000);\r\n    \r\n    return () => clearInterval(deviceInterval);\r\n  }, [selectedDevice]);\r\n\r\n  useEffect(() => {\r\n    // Set up the data refresh interval\r\n    let dataInterval;\r\n    \r\n    if (isRefreshing && selectedDevice) {\r\n      const fetchData = async () => {\r\n        try {\r\n          await Promise.all([\r\n            fetchDeviceData(selectedDevice),\r\n            fetchSecurityAlerts(selectedDevice)\r\n          ]);\r\n        } catch (err) {\r\n          console.error('Error refreshing data:', err);\r\n        }\r\n      };\r\n      \r\n      // Fetch immediately\r\n      fetchData();\r\n      \r\n      // Then set interval\r\n      dataInterval = setInterval(fetchData, refreshInterval * 1000);\r\n    }\r\n    \r\n    return () => {\r\n      if (dataInterval) clearInterval(dataInterval);\r\n    };\r\n  }, [selectedDevice, refreshInterval, isRefreshing]);\r\n\r\n  const fetchDeviceData = async (deviceId) => {\r\n    try {\r\n      console.log(\"Fetching data for device:\", deviceId);\r\n      const result = await getIoTDeviceData(deviceId);\r\n      console.log(\"Received device data:\", result);\r\n      setDeviceData(result.data || []);\r\n    } catch (err) {\r\n      console.error('Error fetching device data:', err);\r\n      // Use fallback data on error with IoT-specific metrics\r\n      setDeviceData([{\r\n        device_id: deviceId,\r\n        session_id: 'fallback-session',\r\n        timestamp: new Date().toISOString(),\r\n        metrics: {\r\n          clicks_per_second: 4,\r\n          movements_count: 120,\r\n          dpi: 16000,\r\n          polling_rate: 1000,\r\n          avg_click_distance: 42.5,\r\n          button_count: 8\r\n        },\r\n        status: {\r\n          under_attack: false,\r\n          attack_duration: 0,\r\n          battery_level: 85,\r\n          connection_quality: 95\r\n        }\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const fetchSecurityAlerts = async (deviceId) => {\r\n    try {\r\n      console.log(\"Fetching security alerts for device:\", deviceId);\r\n      const result = await getDeviceSecurityAlerts(deviceId);\r\n      console.log(\"Received security alerts:\", result);\r\n      setSecurityAlerts(result.alerts || []);\r\n    } catch (err) {\r\n      console.error('Error fetching security alerts:', err);\r\n      // Use fallback data on error\r\n      setSecurityAlerts([{\r\n        timestamp: new Date().toISOString(),\r\n        event_type: 'attack_detected',\r\n        details: {\r\n          attack_type: 'ping_flood',\r\n          intensity: 72,\r\n          threshold: 50\r\n        },\r\n        severity: 'critical'\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleString();\r\n    } catch (e) {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const getMostRecentData = () => {\r\n    if (!deviceData || deviceData.length === 0) return null;\r\n    return deviceData[deviceData.length - 1];\r\n  };\r\n\r\n  const getLatestMetrics = () => {\r\n    const recent = getMostRecentData();\r\n    if (!recent || !recent.metrics) return null;\r\n    return recent.metrics;\r\n  };\r\n\r\n  const getDeviceStatus = () => {\r\n    const recent = getMostRecentData();\r\n    if (!recent || !recent.status) return { under_attack: false };\r\n    return recent.status;\r\n  };\r\n\r\n  // Fixed function to properly reflect attack status\r\n  const renderDeviceStatus = () => {\r\n    const status = getDeviceStatus();\r\n    const isAttacked = status && status.under_attack;\r\n    \r\n    return (\r\n      <div style={{\r\n        padding: '15px',\r\n        borderRadius: '8px',\r\n        backgroundColor: isAttacked ? 'rgba(176, 0, 32, 0.1)' : 'rgba(0, 200, 83, 0.1)',\r\n        border: `1px solid ${isAttacked ? 'var(--error-color)' : 'var(--success-color)'}`,\r\n        marginBottom: '20px'\r\n      }}>\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <div>\r\n            <h3 style={{ margin: '0 0 10px 0' }}>Device Status</h3>\r\n            <p style={{ \r\n              margin: '0', \r\n              fontWeight: 'bold',\r\n              color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\r\n            }}>\r\n              {isAttacked ? 'UNDER ATTACK' : 'SECURE'}\r\n            </p>\r\n          </div>\r\n          <div style={{\r\n            fontSize: '2rem',\r\n            color: isAttacked ? 'var(--error-color)' : 'var(--success-color)'\r\n          }}>\r\n            {isAttacked ? '⚠️' : '✓'}\r\n          </div>\r\n        </div>\r\n        \r\n        {isAttacked && (\r\n          <div style={{ marginTop: '10px' }}>\r\n            <p style={{ margin: '0', fontSize: '0.9rem' }}>\r\n              Attack duration: {status.attack_duration || 0} seconds\r\n            </p>\r\n            <p style={{ margin: '5px 0 0 0', fontSize: '0.9rem' }}>\r\n              Security alert: DDoS protection engaged, traffic filtering active\r\n            </p>\r\n            <p style={{ margin: '5px 0 0 0', fontSize: '0.9rem' }}>\r\n              Take immediate action to mitigate this attack!\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Enhanced to display IoT-specific metrics with better descriptions\r\n  const renderDeviceMetrics = () => {\r\n    const metrics = getLatestMetrics();\r\n    if (!metrics) return <p>No metrics available</p>;\r\n    \r\n    // Get device type for context-specific descriptions\r\n    const selectedDeviceObj = devices.find(d => d.client_id === selectedDevice);\r\n    const deviceType = selectedDeviceObj ? selectedDeviceObj.device_type : 'mouse_sensor';\r\n    \r\n    return (\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Real-Time IoT Performance Metrics</h2>\r\n        \r\n        {/* IoT Device Description */}\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <p><strong>Device Type:</strong> {deviceType} - A specialized IoT sensor system equipped with accelerometers, gyroscopes, and pressure sensors to capture precise gaming input data and transmit it securely across the network.</p>\r\n          <p><strong>IoT Capabilities:</strong> Edge processing, wireless connectivity, real-time data transmission, anomaly detection, encrypted communication</p>\r\n          <p><strong>Network Protocol:</strong> MQTT over TLS 1.3 with certificate-based authentication</p>\r\n        </div>\r\n        \r\n        {/* Metrics with descriptions */}\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n          {Object.entries(metrics).map(([key, value]) => (\r\n            <div key={key} style={{ flex: '1', minWidth: '150px' }}>\r\n              <h3>{formatMetricName(key)}</h3>\r\n              <p style={{ fontSize: '2rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {formatMetricValue(key, value)}\r\n              </p>\r\n              <p style={{ fontSize: '0.8rem', margin: '0', color: '#666' }}>\r\n                {getMetricDescription(key, deviceType)}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* IoT Network Statistics */}\r\n        <div style={{ marginTop: '20px', borderTop: '1px solid var(--border-color)', paddingTop: '15px' }}>\r\n          <h3>IoT Network Statistics</h3>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px' }}>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Packet Loss</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '4.2%' : '0.01%'}\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Latency</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '12ms' : '2ms'}\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Signal Strength</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '-65dBm' : '-42dBm'}\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: '1', minWidth: '150px' }}>\r\n              <h4>Power Consumption</h4>\r\n              <p style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: '5px 0' }}>\r\n                {getDeviceStatus().under_attack ? '120mW' : '85mW'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper functions for better metric presentation\r\n  const formatMetricName = (key) => {\r\n    // Convert snake_case to Title Case\r\n    return key.split('_').map(word => \r\n      word.charAt(0).toUpperCase() + word.slice(1)\r\n    ).join(' ');\r\n  };\r\n\r\n  const formatMetricValue = (key, value) => {\r\n    // Format values with appropriate units\r\n    if (key === 'avg_click_distance') return `${value}px`;\r\n    if (key === 'polling_rate') return `${value}Hz`;\r\n    if (key === 'dpi') return value.toLocaleString();\r\n    return value;\r\n  };\r\n\r\n  const getMetricDescription = (key, deviceType) => {\r\n    const descriptions = {\r\n      clicks_per_second: 'Number of input events per second detected by the pressure sensors',\r\n      movements_count: 'Total movement events tracked by motion sensors',\r\n      dpi: 'Resolution of the optical/laser position sensor',\r\n      polling_rate: 'Sensor data sampling frequency',\r\n      avg_click_distance: 'Average pixel distance between clicks measured by position sensors',\r\n      button_count: 'Number of discrete input sensors on device'\r\n    };\r\n    \r\n    return descriptions[key] || `IoT sensor data metric for ${deviceType}`;\r\n  };\r\n\r\n  // Enhanced security alerts with better formatting\r\n  const renderSecurityAlerts = () => {\r\n    if (!securityAlerts || securityAlerts.length === 0) {\r\n      return (\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">Security Alerts</h2>\r\n          <p>No security alerts detected for this IoT sensor</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">Security Alerts</h2>\r\n        <div style={{ overflowY: 'auto', maxHeight: '300px' }}>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Timestamp</th>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Event Type</th>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Severity</th>\r\n                <th style={{ textAlign: 'left', padding: '12px 8px', position: 'sticky', top: 0, backgroundColor: 'var(--card-bg)', borderBottom: '2px solid var(--border-color)' }}>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {securityAlerts.slice().reverse().map((alert, index) => (\r\n                <tr key={index}>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    {formatDate(alert.timestamp)}\r\n                  </td>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    {formatEventType(alert.event_type)}\r\n                  </td>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    <span style={{ \r\n                      display: 'inline-block',\r\n                      padding: '4px 8px',\r\n                      borderRadius: '4px',\r\n                      backgroundColor: alert.severity === 'critical' ? 'var(--error-color)' : '#ff9800',\r\n                      color: 'white',\r\n                      fontWeight: 'bold',\r\n                      fontSize: '0.8rem'\r\n                    }}>\r\n                      {alert.severity.toUpperCase()}\r\n                    </span>\r\n                  </td>\r\n                  <td style={{ padding: '12px 8px', borderBottom: '1px solid var(--border-color)' }}>\r\n                    {formatAlertDetails(alert)}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper functions for security alerts\r\n  const formatEventType = (eventType) => {\r\n    // Make event types more descriptive\r\n    if (eventType === 'attack_detected') return 'Network Attack Detected';\r\n    if (eventType === 'attack_resolved') return 'Attack Mitigation Successful';\r\n    return eventType.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\r\n  };\r\n\r\n  const formatAlertDetails = (alert) => {\r\n    if (!alert.details) return 'No details available';\r\n    \r\n    if (typeof alert.details === 'string') {\r\n      try {\r\n        const details = JSON.parse(alert.details);\r\n        return formatDetailsObject(details);\r\n      } catch (e) {\r\n        return alert.details;\r\n      }\r\n    }\r\n    \r\n    return formatDetailsObject(alert.details);\r\n  };\r\n\r\n  const formatDetailsObject = (details) => {\r\n    if (details.attack_type === 'ping_flood') {\r\n      return `DDoS attack detected: ${details.intensity} packets/sec (threshold: ${details.threshold}). IoT firewall engaged.`;\r\n    }\r\n    \r\n    if (details.duration) {\r\n      return `Attack resolved after ${details.duration} seconds. Normal operation restored.`;\r\n    }\r\n    \r\n    return JSON.stringify(details);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading IoT devices...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>IoT Sensor Network Monitoring</h1>\r\n      <p>Monitor your IoT gaming equipment sensors, network performance and security in real-time</p>\r\n\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\r\n        <div>\r\n          <select \r\n            value={selectedDevice || ''}\r\n            onChange={(e) => setSelectedDevice(e.target.value)}\r\n            className=\"form-control\"\r\n            style={{ padding: '8px', minWidth: '200px' }}\r\n          >\r\n            <option value=\"\">Select an IoT sensor</option>\r\n            {devices.map(device => (\r\n              <option key={device.client_id} value={device.client_id}>\r\n                {device.name} ({device.device_type})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Refresh interval:\r\n            <select \r\n              value={refreshInterval}\r\n              onChange={(e) => setRefreshInterval(parseInt(e.target.value))}\r\n              className=\"form-control\"\r\n              style={{ marginLeft: '10px', padding: '8px' }}\r\n            >\r\n              <option value=\"1\">1 second</option>\r\n              <option value=\"5\">5 seconds</option>\r\n              <option value=\"10\">10 seconds</option>\r\n              <option value=\"30\">30 seconds</option>\r\n            </select>\r\n          </label>\r\n          \r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => setIsRefreshing(!isRefreshing)}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            {isRefreshing ? 'Pause' : 'Resume'} Updates\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedDevice ? (\r\n        <>\r\n          {renderDeviceStatus()}\r\n          {renderDeviceMetrics()}\r\n          {renderSecurityAlerts()}\r\n        </>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <h2 className=\"card-title\">No IoT Device Selected</h2>\r\n          <p>Please select an IoT device sensor from the dropdown to view its metrics and security status.</p>\r\n          \r\n          {devices.length === 0 && (\r\n            <div style={{ marginTop: '20px' }}>\r\n              <p>No IoT devices found in your account.</p>\r\n              <p>To add a device, go to the Devices page and register a new device with type 'mouse_sensor', 'keyboard_sensor', or 'headset_sensor'.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">IoT Security Recommendations</h2>\r\n        <ul>\r\n          <li>Keep IoT firmware updated with the latest security patches</li>\r\n          <li>Implement network segmentation to isolate IoT devices</li>\r\n          <li>Use strong, unique credentials for each device</li>\r\n          <li>Enable TLS for all device communication</li>\r\n          <li>Regularly audit device access and traffic patterns</li>\r\n          <li>Implement intrusion detection at the edge gateway</li>\r\n          <li>Ensure proper certificate management and rotation</li>\r\n        </ul>\r\n        \r\n        <div style={{ marginTop: '20px', padding: '15px', backgroundColor: 'rgba(98, 0, 234, 0.1)', borderRadius: '8px' }}>\r\n          <h3 style={{ margin: '0 0 10px 0' }}>DDoS Attack Protection for IoT Gaming Sensors</h3>\r\n          <p style={{ margin: '0 0 10px 0' }}>\r\n            This monitoring system implements a multilayered defense against various DDoS attacks targeting your gaming sensors:\r\n          </p>\r\n          <ol>\r\n            <li><strong>Edge Filtering:</strong> Attack traffic is detected and filtered at the sensor level before impacting performance</li>\r\n            <li><strong>Adaptive Rate Limiting:</strong> Dynamically adjusts traffic thresholds based on historical patterns</li>\r\n            <li><strong>Signature-Based Detection:</strong> Identifies known attack patterns and automatically applies countermeasures</li>\r\n            <li><strong>Anomaly Detection:</strong> Machine learning algorithms identify deviations from normal traffic</li>\r\n            <li><strong>Secure Bootstrapping:</strong> Devices use mutual authentication with the gateway to prevent impersonation</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h2 className=\"card-title\">IoT Attack Simulation</h2>\r\n        <p>To test the security monitoring features of your IoT gaming sensors, you can simulate an attack using the following methods:</p>\r\n        \r\n        <div style={{ \r\n          backgroundColor: 'var(--card-bg)', \r\n          border: '1px solid var(--border-color)',\r\n          borderRadius: '5px',\r\n          padding: '15px',\r\n          fontFamily: 'monospace',\r\n          overflow: 'auto'\r\n        }}>\r\n          <p style={{ margin: '0 0 10px 0', fontWeight: 'bold' }}>DDoS simulation on IoT sensor gateway:</p>\r\n          <code>sudo hping3 -1 --flood -a [SPOOFED_IP] [SENSOR_GATEWAY_IP]</code>\r\n          <p style={{ margin: '10px 0 10px 0', fontWeight: 'bold' }}>Or using ping with large packets:</p>\r\n          <code>ping -f -s 65500 [SENSOR_GATEWAY_IP]</code>\r\n          <p style={{ margin: '10px 0 0 0', fontWeight: 'bold' }}>For a more distributed attack simulation:</p>\r\n          <code>sudo mdk3 [INTERFACE] d -c [CHANNEL] -s 1000</code>\r\n        </div>\r\n        \r\n        <p style={{ marginTop: '15px', fontSize: '0.9rem', color: 'var(--error-color)' }}>\r\n          <strong>Warning:</strong> Only perform these tests in your controlled lab environment against \r\n          your own devices. Unauthorized DoS attacks are illegal and unethical.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IoTDevices;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}